{"version":3,"sources":["app.js","projects.js","templates.js","servers.js","heartbeats.js","notifications.js","notifyEmails.js","shareFiles.js","projectFiles.js","checkUrls.js","variables.js","deployment.js","commands.js","users.js","groups.js","uploader.js","profile.js","AdminLTE.js"],"names":[],"mappingshjNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnxxttxrjXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["$.ajaxPrefilter(function(options, originalOptions, jqXHR) {\n    jqXHR.setRequestHeader('X-CSRF-Token', $('meta[name=\"token\"]').attr('content'));\n});\n\nvar app = app || {};\n\ntoastr.options.closeButton = true;\ntoastr.options.progressBar = true;\ntoastr.options.preventDuplicates = true;\ntoastr.options.closeMethod = 'fadeOut';\ntoastr.options.closeDuration = 300;\ntoastr.options.closeEasing = 'swing';\ntoastr.options.positionClass = 'toast-bottom-right';\ntoastr.options.timeOut = 5000;\ntoastr.options.extendedTimeOut = 7000;\n\n(function ($) {\n\n    // Don't need to try and connect to the web socket when not logged in\n    if (window.location.href.match(/login|password/) != null) {\n        return;\n    }\n\n    var FINISHED     = 0;\n    var PENDING      = 1;\n    var DEPLOYING    = 2;\n    var FAILED       = 3;\n    var NOT_DEPLOYED = 4;\n\n    var DEPLOYMENT_COMPLETED = 0;\n    var DEPLOYMENT_PENDING   = 1;\n    var DEPLOYMENT_DEPLOYING = 2;\n    var DEPLOYMENT_FAILED    = 3;\n    var DEPLOYMENT_ERRORS    = 4;\n    var DEPLOYMENT_CANCELLED = 5;\n\n    app.project_id = app.project_id || null;\n\n    app.listener = io.connect($('meta[name=\"socket_url\"]').attr('content'), {\n        query: 'jwt=' + $('meta[name=\"jwt\"]').attr('content')\n    });\n\n    app.connection_error = false;\n\n    app.listener.on('connect_error', function(error) {\n        if (!app.connection_error) {\n            $('#socket_offline').show();\n        }\n\n        app.connection_error = true;\n    });\n\n    app.listener.on('connect', function() {\n        $('#socket_offline').hide();\n        app.connection_error = false;\n    });\n\n    app.listener.on('reconnect', function() {\n        $('#socket_offline').hide();\n        app.connection_error = false;\n    });\n\n    // Navbar deployment status\n    // FIXME: Convert these menus to backbone\n    // FIXME: Convert the project and deployments to backbone\n    // TODO: Update the timeline\n    app.listener.on('deployment:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelChanged', function (data) {\n        updateNavBar(data);\n\n        //var project = $('#project_' + data.model.project_id);\n\n        if ($('#timeline').length > 0) {\n            updateTimeline();\n        }\n\n        var deployment  = $('#deployment_' + data.model.id);\n\n        if (deployment.length > 0) {\n\n            $('td:nth-child(4)', deployment).text(data.model.committer);\n\n            if (data.model.commit_url) {\n                $('td:nth-child(5)', deployment).html('<a href=\"' + data.model.commit_url + '\" target=\"_blank\">' + data.model.short_commit + '</a>');\n            } else {\n                $('td:nth-child(5)', deployment).text(data.model.short_commit);\n            }\n\n            var icon_class = 'clock-o';\n            var label_class = 'info';\n            var label = Lang.deployments.status.pending;\n            var done = false;\n\n            data.model.status = parseInt(data.model.status);\n            var status = $('td:nth-child(7) span.label', deployment);\n\n            if (data.model.status === DEPLOYMENT_COMPLETED) {\n                icon_class = 'check';\n                label_class = 'success';\n                label = Lang.deployments.status.completed;\n                done = true;\n            } else if (data.model.status === DEPLOYMENT_DEPLOYING) {\n                icon_class = 'spinner fa-pulse';\n                label_class = 'warning';\n                label = Lang.deployments.status.running;\n            } else if (data.model.status === DEPLOYMENT_FAILED) {\n                icon_class = 'warning';\n                label_class = 'danger';\n                label = Lang.deployments.status.failed;\n                done = true;\n            } else if (data.model.status === DEPLOYMENT_ERRORS) {\n                icon_class = 'warning';\n                label_class = 'success';\n                label = Lang.deployments.status.errors;\n                done = true;\n            } else if (data.model.status === DEPLOYMENT_CANCELLED) {\n                icon_class = 'warning';\n                label_class = 'danger';\n                label = Lang.deployments.status.cancelled;\n                done = true;\n            }\n\n            if (done) {\n                $('button#deploy_project:disabled').removeAttr('disabled');\n            }\n\n            status.attr('class', 'label label-' + label_class)\n            $('i', status).attr('class', 'fa fa-' + icon_class);\n            $('span', status).text(label);\n        } else if ($('#timeline').length === 0) { // Don't show on dashboard\n            // FIXME: Also don't show if viewing the deployment, or the project the deployment is for\n            if (data.model.status === DEPLOYMENT_COMPLETED) {\n                toastr.success(Lang.toast.title.replace(':id', data.model.id) + ' - ' + Lang.toast.completed, data.model.project_name);\n            } else if (data.model.status === DEPLOYMENT_FAILED) {\n                toastr.error(Lang.toast.title.replace(':id', data.model.id) + ' - ' + Lang.toast.failed, data.model.project_name);\n            } else if (data.model.status === DEPLOYMENT_ERRORS) {\n                toastr.warning(Lang.toast.title.replace(':id', data.model.id) + ' - ' + Lang.toast.completed_with_errors, data.model.project_name);\n            } // FIXME: Add cancelled\n        }\n    });\n\n    app.listener.on('group:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelChanged', function (data) {\n        $('#sidebar_group_' + data.model.id).html(data.model.name);\n    });\n\n    app.listener.on('project:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelChanged', function (data) {\n        $('#sidebar_project_' + data.model.id).html(data.model.name);\n\n        var project = $('#project_' + data.model.id);\n\n        if (project.length > 0) {\n\n            var icon_class = 'question-circle';\n            var label_class = 'primary';\n            var label = Lang.projects.status.not_deployed;\n\n            data.model.status = parseInt(data.model.status);\n            var status = $('td:nth-child(3) span.label', project);\n\n            if (data.model.status === FINISHED) {\n                icon_class = 'check';\n                label_class = 'success';\n                label = Lang.projects.status.finished;\n            } else if (data.model.status === DEPLOYING) {\n                icon_class = 'spinner fa-pulse';\n                label_class = 'warning';\n                label = Lang.projects.status.deploying;\n            } else if (data.model.status === FAILED) {\n                icon_class = 'warning';\n                label_class = 'danger';\n                label = Lang.projects.status.failed;\n            } else if (data.model.status === PENDING) {\n                icon_class = 'clock-o';\n                label_class = 'info';\n                label = Lang.projects.status.pending;\n            }\n\n            $('td:first a', project).text(data.model.name);\n            $('td:nth-child(2)', project).text(moment(data.model.last_run).format('Do MMMM YYYY h:mm:ss A'));\n            status.attr('class', 'label label-' + label_class)\n            $('i', status).attr('class', 'fa fa-' + icon_class);\n            $('span', status).text(label);\n        }\n    });\n\n    app.listener.on('project:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelTrashed', function (data) {\n        $('#sidebar_project_' + data.model.id).parent('li').remove();\n\n        if (parseInt(data.model.id) === parseInt(app.project_id)) {\n            window.location.href = '/';\n        }\n    });\n\n    // FIXME: This is cheating\n    function updateTimeline() {\n        $.ajax({\n            type: 'GET',\n            url: '/timeline'\n        }).success(function (response) {\n            $('#timeline').html(response);\n        });\n    }\n\n    function updateNavBar(data) {\n        data.model.time = moment(data.model.started_at).format('h:mm:ss A');\n        data.model.url = '/deployment/' + data.model.id;\n\n        $('#deployment_info_' + data.model.id).remove();\n        $('#pending_menu, #deploying_menu').show();\n\n        var template = _.template($('#deployment_list_template').html());\n        var html = template(data.model);\n\n        if (data.model.status === DEPLOYMENT_PENDING) {\n            $('#pending_menu ul.menu').append(html);\n        }\n        else if (data.model.status === DEPLOYMENT_DEPLOYING) {\n            $('#deploying_menu ul.menu').append(html);\n        }\n\n        var pending = $('#pending_menu ul.menu li').length;\n        var deploying = $('#deploying_menu ul.menu li').length;\n\n        var pending_label = Lang.nav.multi_pending.replace(':count', pending);\n        if (pending === 0) {\n            $('#pending_menu').hide();\n        }\n        else if (pending === 1) {\n            pending_label = Lang.nav.single_pending;\n        }\n\n        var deploying_label = Lang.nav.multi_running.replace(':count', deploying);\n        if (deploying === 0) {\n            $('#deploying_menu').hide();\n        }\n        else if (deploying === 1) {\n            deploying_label = Lang.nav.single_running;\n        }\n\n        $('#deploying_menu span.label-warning').html(deploying);\n        $('#deploying_menu .header').text(deploying_label);\n\n        $('#pending_menu span.label-info').html(pending);\n        $('#pending_menu .header').text(pending_label);\n    }\n\n    $(document).ready(function () {\n        if ($('#pending_menu ul.menu li').length > 0) {\n            $('#pending_menu').show();\n        }\n\n        if ($('#deploying_menu ul.menu li').length > 0) {\n            $('#deploying_menu').show();\n        }\n    });\n\n})(jQuery);\n","var app = app || {};\n\n(function ($) {\n    $('.deployment-source:radio').on('change', function (event) {\n        var target = $(event.currentTarget);\n\n        $('input[type=text].deployment-source').hide();\n        if (target.val() === 'branch') {\n            $('#deployment_branch').show();\n        } else if (target.val() === 'tag') {\n            $('#deployment_tag').show();\n        }\n    });\n\n    $('#reason').on('show.bs.modal', function (event) {\n        var modal = $(this);\n        $('.callout-danger', modal).hide();\n    });\n\n    $('#reason button.btn-save').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n        var source = $('input[name=source]:checked').val();\n\n        $('.has-error', source).removeClass('has-error');\n\n        if (source === 'branch' || source === 'tag') {\n            if ($('#deployment_' + source).val() === '') {\n                $('#deployment_' + source).parentsUntil('div').addClass('has-error');\n\n                $('.callout-danger', dialog).show();\n                event.stopPropagation();\n                return;\n            }\n        }\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-save');\n        $('button.close', dialog).hide();\n    });\n\n   // FIXME: This seems very wrong\n    $('#project').on('show.bs.modal', function (event) {\n        var button = $(event.relatedTarget);\n        var modal = $(this);\n        var title = Lang.create;\n\n        $('.btn-danger', modal).hide();\n        $('.callout-danger', modal).hide();\n        $('.has-error', modal).removeClass('has-error');\n        $('.label-danger', modal).remove();\n        $('#template-list', modal).hide();\n\n        if (button.hasClass('btn-edit')) {\n            title = Lang.edit;\n            $('.btn-danger', modal).show();\n        } else {\n            $('#template-list', modal).show();\n            $('#project_id').val('');\n            $('#project_name').val('');\n            $('#project_repository').val('');\n            $('#project_branch').val('master');\n            $('#project_group_id').val($(\"#project_group_id option:first\").val());\n            $('#project_builds_to_keep').val(10);\n            $('#project_url').val('');\n            $('#project_build_url').val('');\n        }\n\n        modal.find('.modal-title span').text(title);\n    });\n\n    // FIXME: This seems very wrong\n    $('#project button.btn-delete').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-trash');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var project = app.Projects.get($('#project_id').val());\n\n        project.destroy({\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            },\n            error: function() {\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    // FIXME: This seems very wrong\n    $('#project button.btn-save').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-save');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var project_id = $('#project_id').val();\n\n        if (project_id) {\n            var project = app.Projects.get(project_id);\n        } else {\n            var project = new app.Project();\n        }\n\n        project.save({\n            name: $('#project_name').val(),\n            repository: $('#project_repository').val(),\n            branch: $('#project_branch').val(),\n            group_id: $('#project_group_id').val(),\n            builds_to_keep: $('#project_builds_to_keep').val(),\n            url: $('#project_url').val(),\n            build_url: $('#project_build_url').val(),\n            template_id: $('#project_template_id') ? $('#project_template_id').val() : null\n        }, {\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n\n                if (!project_id) {\n                    app.Projects.add(response);\n                }\n            },\n            error: function(model, response, options) {\n                $('.callout-danger', dialog).show();\n\n                var errors = response.responseJSON;\n\n\n                $('.has-error', dialog).removeClass('has-error');\n                $('.label-danger', dialog).remove();\n\n                $('form input', dialog).each(function (index, element) {\n                    element = $(element);\n\n                    var name = element.attr('name');\n\n                    if (typeof errors[name] !== 'undefined') {\n                        var parent = element.parent('div');\n                        parent.addClass('has-error');\n                        parent.append($('<span>').attr('class', 'label label-danger').text(errors[name]));\n                    }\n\n                });\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    app.Project = Backbone.Model.extend({\n        urlRoot: '/admin/projects'\n    });\n\n    var Projects = Backbone.Collection.extend({\n        model: app.Project\n    });\n\n    app.Projects = new Projects();\n\n    app.ProjectsTab = Backbone.View.extend({\n        el: '#app',\n        events: {\n\n        },\n        initialize: function() {\n            this.$list = $('#project_list tbody');\n\n            $('#project_list').hide();\n            $('#no_projects').show();\n\n            this.listenTo(app.Projects, 'add', this.addOne);\n            this.listenTo(app.Projects, 'reset', this.addAll);\n            this.listenTo(app.Projects, 'remove', this.addAll);\n            this.listenTo(app.Projects, 'all', this.render);\n\n            app.listener.on('project:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelChanged', function (data) {\n                var project = app.Projects.get(parseInt(data.model.id));\n\n                if (project) {\n                    project.set(data.model);\n                }\n            });\n\n            app.listener.on('project:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelCreated', function (data) {\n                app.Projects.add(data.model);\n            });\n\n            app.listener.on('project:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelTrashed', function (data) {\n                var project = app.Projects.get(parseInt(data.model.id));\n\n                if (project) {\n                    app.Projects.remove(project);\n                }\n\n                $('#project_' + data.model.id).parent('li').remove();\n\n                if (parseInt(data.model.id) === parseInt(app.project_id)) {\n                    window.location.href = '/';\n                }\n            });\n        },\n        render: function () {\n            if (app.Projects.length) {\n                $('#no_projects').hide();\n                $('#project_list').show();\n            } else {\n                $('#no_projects').show();\n                $('#project_list').hide();\n            }\n        },\n        addOne: function (project) {\n            var view = new app.ProjectView({\n                model: project\n            });\n\n            this.$list.append(view.render().el);\n        },\n        addAll: function () {\n            this.$list.html('');\n            app.Projects.each(this.addOne, this);\n        }\n    });\n\n    app.ProjectView = Backbone.View.extend({\n        tagName:  'tr',\n        events: {\n            'click .btn-edit': 'editProject'\n        },\n        initialize: function () {\n            this.listenTo(this.model, 'change', this.render);\n            this.listenTo(this.model, 'destroy', this.remove);\n\n            this.template = _.template($('#project-template').html());\n        },\n        render: function () {\n            var data = this.model.toJSON();\n\n            data.deploy = data.last_run ? moment(data.last_run).format('Do MMMM YYYY h:mm:ss A') : false;\n\n            this.$el.html(this.template(data));\n\n            return this;\n        },\n        editProject: function() {\n            $('#project_id').val(this.model.id);\n            $('#project_name').val(this.model.get('name'));\n            $('#project_repository').val(this.model.get('repository'));\n            $('#project_branch').val(this.model.get('branch'));\n            $('#project_group_id').val(this.model.get('group_id'));\n            $('#project_builds_to_keep').val(this.model.get('builds_to_keep'));\n            $('#project_url').val(this.model.get('url'));\n            $('#project_build_url').val(this.model.get('build_url'));\n        }\n    });\n\n    $('#new_webhook').on('click', function(event) {\n        var target = $(event.currentTarget);\n        var project_id = target.data('project-id');\n        var icon = $('i', target);\n\n        if ($('.fa-spin', target).length > 0) {\n            return;\n        }\n\n        target.attr('disabled', 'disabled');\n\n        icon.addClass('fa-spin');\n\n        $.ajax({\n            type: 'GET',\n            url: '/webhook/' + project_id + '/refresh'\n        }).fail(function (response) {\n\n        }).done(function (data) {\n            $('#webhook').html(data.url);\n        }).always(function () {\n            icon.removeClass('fa-spin');\n            target.removeAttr('disabled');\n        });\n    });\n})(jQuery);\n","var app = app || {};\n\n(function ($) {\n    // FIXME: This seems very wrong\n    $('#template').on('show.bs.modal', function (event) {\n        var button = $(event.relatedTarget);\n        var modal = $(this);\n        var title = Lang.create;\n\n        $('.btn-danger', modal).hide();\n        $('.callout-danger', modal).hide();\n        $('.has-error', modal).removeClass('has-error');\n        $('.label-danger', modal).remove();\n\n        if (button.hasClass('btn-edit')) {\n            title = Lang.edit;\n            $('.btn-danger', modal).show();\n        } else {\n            $('#template_id').val('');\n            $('#template_name').val('');\n        }\n\n        modal.find('.modal-title span').text(title);\n    });\n\n    // FIXME: This seems very wrong\n    $('#template button.btn-delete').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-trash');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var template = app.Templates.get($('#template_id').val());\n\n        template.destroy({\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            },\n            error: function() {\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    // FIXME: This seems very wrong\n    $('#template button.btn-save').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-save');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var template_id = $('#template_id').val();\n\n        if (template_id) {\n            var template = app.Templates.get(template_id);\n        } else {\n            var template = new app.Template();\n        }\n\n        template.save({\n            name: $('#template_name').val()\n        }, {\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n\n                if (!template_id) {\n                    app.Templates.add(response);\n\n                    window.location.href = '/admin/templates/' + response.id;\n                }\n            },\n            error: function(model, response, options) {\n                $('.callout-danger', dialog).show();\n\n                var errors = response.responseJSON;\n\n                $('.has-error', dialog).removeClass('has-error');\n                $('.label-danger', dialog).remove();\n\n                $('form input', dialog).each(function (index, element) {\n                    element = $(element);\n\n                    var name = element.attr('name');\n\n                    if (typeof errors[name] !== 'undefined') {\n                        var parent = element.parent('div');\n                        parent.addClass('has-error');\n                        parent.append($('<span>').attr('class', 'label label-danger').text(errors[name]));\n                    }\n                });\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    app.Template = Backbone.Model.extend({\n        urlRoot: '/admin/templates'\n    });\n\n    var Templates = Backbone.Collection.extend({\n        model: app.Template\n    });\n\n    app.Templates = new Templates();\n\n    app.TemplatesTab = Backbone.View.extend({\n        el: '#app',\n        events: {\n\n        },\n        initialize: function() {\n            this.$list = $('#template_list tbody');\n\n            $('#template_list').hide();\n            $('#no_templates').show();\n\n            this.listenTo(app.Templates, 'add', this.addOne);\n            this.listenTo(app.Templates, 'reset', this.addAll);\n            this.listenTo(app.Templates, 'remove', this.addAll);\n            this.listenTo(app.Templates, 'all', this.render);\n\n            app.listener.on('template:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelChanged', function (data) {\n                var template = app.Templates.get(parseInt(data.model.id));\n\n                if (template) {\n                    template.set(data.model);\n                }\n            });\n\n            app.listener.on('template:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelCreated', function (data) {\n                app.Templates.add(data.model);\n            });\n\n            app.listener.on('template:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelTrashed', function (data) {\n                var template = app.Templates.get(parseInt(data.model.id));\n\n                if (template) {\n                    app.Templates.remove(template);\n                }\n            });\n        },\n        render: function () {\n            if (app.Templates.length) {\n                $('#no_templates').hide();\n                $('#template_list').show();\n            } else {\n                $('#no_templates').show();\n                $('#template_list').hide();\n            }\n        },\n        addOne: function (template) {\n            var view = new app.TemplateView({ \n                model: template\n            });\n\n            this.$list.append(view.render().el);\n        },\n        addAll: function () {\n            this.$list.html('');\n            app.Templates.each(this.addOne, this);\n        }\n    });\n\n    app.TemplateView = Backbone.View.extend({\n        tagName:  'tr',\n        events: {\n            'click .btn-edit': 'editTemplate'\n        },\n        initialize: function () {\n            this.listenTo(this.model, 'change', this.render);\n            this.listenTo(this.model, 'destroy', this.remove);\n\n            this.template = _.template($('#template-template').html());\n        },\n        render: function () {\n            var data = this.model.toJSON();\n\n            this.$el.html(this.template(data));\n\n            return this;\n        },\n        editTemplate: function() {\n            $('#template_id').val(this.model.id);\n            $('#template_name').val(this.model.get('name'));\n        }\n    });\n})(jQuery);","var app = app || {};\n\n(function ($) {\n    var SUCCESSFUL = 0;\n    var UNTESTED   = 1;\n    var FAILED     = 2;\n    var TESTING    = 3;\n\n    $('#server_list table').sortable({\n        containerSelector: 'table',\n        itemPath: '> tbody',\n        itemSelector: 'tr',\n        placeholder: '<tr class=\"placeholder\"/>',\n        delay: 500,\n        onDrop: function (item, container, _super) {\n            _super(item, container);\n\n            var ids = [];\n            $('tbody tr td:first-child', container.el[0]).each(function (idx, element) {\n                ids.push($(element).data('server-id'));\n            });\n\n            $.ajax({ \n                url: '/servers/reorder',\n                method: 'POST',\n                data: {\n                    servers: ids\n                }\n            });\n        }\n    });\n\n\n    // FIXME: This seems very wrong\n    $('#server').on('show.bs.modal', function (event) {\n        var button = $(event.relatedTarget);\n        var modal = $(this);\n        var title = Lang.servers.create;\n\n        $('.btn-danger', modal).hide();\n        $('.callout-danger', modal).hide();\n        $('.has-error', modal).removeClass('has-error');\n        $('.label-danger', modal).remove();\n        $('#add-server-command', modal).hide();\n\n        if (button.hasClass('btn-edit')) {\n            title = Lang.servers.edit;\n            $('.btn-danger', modal).show();\n        } else {\n            $('#server_id').val('');\n            $('#server_name').val('');\n            $('#server_address').val('');\n            $('#server_port').val('22');\n            $('#server_user').val('');\n            $('#server_path').val('');\n            $('#server_deploy_code').prop('checked', true);\n            $('#add-server-command', modal).show();\n        }\n\n        modal.find('.modal-title span').text(title);\n    });\n\n    // FIXME: This seems very wrong\n    $('#server button.btn-delete').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-trash');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var server = app.Servers.get($('#server_id').val());\n\n        server.destroy({\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            },\n            error: function() {\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    // FIXME: This seems very wrong\n    $('#server button.btn-save').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-save');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var server_id = $('#server_id').val();\n\n        if (server_id) {\n            var server = app.Servers.get(server_id);\n        } else {\n            var server = new app.Server();\n        }\n\n        server.save({\n            name:         $('#server_name').val(),\n            ip_address:   $('#server_address').val(),\n            port:         $('#server_port').val(),\n            user:         $('#server_user').val(),\n            path:         $('#server_path').val(),\n            deploy_code:  $('#server_deploy_code').is(':checked'),\n            project_id:   $('input[name=\"project_id\"]').val(),\n            add_commands: $('#server_commands').is(':checked')\n        }, {\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n\n                if (!server_id) {\n                    app.Servers.add(response);\n                }\n            },\n            error: function(model, response, options) {\n                $('.callout-danger', dialog).show();\n\n                var errors = response.responseJSON;\n\n                $('.has-error', dialog).removeClass('has-error');\n                $('.label-danger', dialog).remove();\n\n                $('form input', dialog).each(function (index, element) {\n                    element = $(element);\n\n                    var name = element.attr('name');\n\n                    if (typeof errors[name] !== 'undefined') {\n                        var parent = element.parent('div');\n                        parent.addClass('has-error');\n                        parent.append($('<span>').attr('class', 'label label-danger').text(errors[name]));\n                    }\n                });\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n\n\n\n\n\n    app.Server = Backbone.Model.extend({\n        urlRoot: '/servers'\n    });\n\n    var Servers = Backbone.Collection.extend({\n        model: app.Server,\n        comparator: function(serverA, serverB) {\n            if (serverA.get('name') > serverB.get('name')) {\n                return -1; // before\n            } else if (serverA.get('name') < serverB.get('name')) {\n                return 1; // after\n            }\n\n            return 0; // equal\n        }\n    });\n\n    app.Servers = new Servers();\n\n    app.ServersTab = Backbone.View.extend({\n        el: '#app',\n        events: {\n\n        },\n        initialize: function() {\n            this.$list = $('#server_list tbody');\n\n            $('#no_servers').show();\n            $('#server_list').hide();\n\n            this.listenTo(app.Servers, 'add', this.addOne);\n            this.listenTo(app.Servers, 'reset', this.addAll);\n            this.listenTo(app.Servers, 'remove', this.addAll);\n            this.listenTo(app.Servers, 'all', this.render);\n\n            app.listener.on('server:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelChanged', function (data) {\n                var server = app.Servers.get(parseInt(data.model.id));\n\n                if (server) {\n                    server.set(data.model);\n                }\n            });\n\n            app.listener.on('server:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelCreated', function (data) {\n                if (parseInt(data.model.project_id) === parseInt(app.project_id)) {\n                    app.Servers.add(data.model);\n                }\n            });\n\n            app.listener.on('server:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelTrashed', function (data) {\n                var server = app.Servers.get(parseInt(data.model.id));\n\n                if (server) {\n                    app.Servers.remove(server);\n                }\n            });\n        },\n        render: function () {\n            if (app.Servers.length) {\n                $('#no_servers').hide();\n                $('#server_list').show();\n            } else {\n                $('#no_servers').show();\n                $('#server_list').hide();\n            }\n        },\n        addOne: function (server) {\n\n            var view = new app.ServerView({ \n                model: server\n            });\n\n            this.$list.append(view.render().el);\n        },\n        addAll: function () {\n            this.$list.html('');\n            app.Servers.each(this.addOne, this);\n        }\n    });\n\n    app.ServerView = Backbone.View.extend({\n        tagName:  'tr',\n        events: {\n            'click .btn-test': 'testConnection',\n            'click .btn-edit': 'editServer'\n        },\n        initialize: function () {\n            this.listenTo(this.model, 'change', this.render);\n            this.listenTo(this.model, 'destroy', this.remove);\n\n            this.template = _.template($('#server-template').html());\n        },\n        render: function () {\n            var data = this.model.toJSON();\n\n            data.status_css = 'primary';\n            data.icon_css   = 'question';\n            data.status     = Lang.servers.status.untested;\n\n            if (parseInt(this.model.get('status')) === SUCCESSFUL) {\n                data.status_css = 'success';\n                data.icon_css   = 'check';\n                data.status     = Lang.servers.status.successful;\n            } else if (parseInt(this.model.get('status')) === TESTING) {\n                data.status_css = 'warning';\n                data.icon_css   = 'spinner fa-pulse';\n                data.status     = Lang.servers.status.testing;\n            } else if (parseInt(this.model.get('status')) === FAILED) {\n                data.status_css = 'danger';\n                data.icon_css   = 'warning';\n                data.status     = Lang.servers.status.failed;\n            }\n\n            this.$el.html(this.template(data));\n\n            return this;\n        },\n        editServer: function() {\n            // FIXME: Sure this is wrong?\n            $('#server_id').val(this.model.id);\n            $('#server_name').val(this.model.get('name'));\n            $('#server_address').val(this.model.get('ip_address'));\n            $('#server_port').val(this.model.get('port'));\n            $('#server_user').val(this.model.get('user'));\n            $('#server_path').val(this.model.get('path'));\n\n            $('#server_deploy_code').prop('checked', (this.model.get('deploy_code') === true));\n        },\n        testConnection: function() {\n            if (parseInt(this.model.get('status')) === TESTING) {\n                return;\n            }\n\n            this.model.set({\n                status: TESTING\n            });\n\n            var that = this;\n            $.ajax({\n                type: 'GET',\n                url: this.model.urlRoot + '/' + this.model.id + '/test'\n            }).fail(function (response) {\n                that.model.set({\n                    status: FAILED\n                });\n            });\n\n        }\n    });\n})(jQuery);","var app = app || {};\n\n(function ($) {\n    var OK       = 0;\n    var UNTESTED = 1;\n    var MISSING  = 2;\n\n    // FIXME: This seems very wrong\n    $('#heartbeat').on('show.bs.modal', function (event) {\n        var button = $(event.relatedTarget);\n        var modal = $(this);\n        var title = Lang.heartbeats.create;\n\n        $('.btn-danger', modal).hide();\n        $('.callout-danger', modal).hide();\n        $('.has-error', modal).removeClass('has-error');\n        $('.label-danger', modal).remove();\n\n        if (button.hasClass('btn-edit')) {\n            title = Lang.heartbeats.edit;\n            $('.btn-danger', modal).show();\n        } else {\n            $('#heartbeat_id').val('');\n            $('#heartbeat_name').val('');\n            $('#heartbeat_interval_30').prop('checked', true);\n        }\n\n        modal.find('.modal-title span').text(title);\n    });\n\n    // FIXME: This seems very wrong\n    $('#heartbeat button.btn-delete').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-trash');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var heartbeat = app.Heartbeats.get($('#heartbeat_id').val());\n\n        heartbeat.destroy({\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            },\n            error: function() {\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    // FIXME: This seems very wrong\n    $('#heartbeat button.btn-save').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-save');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var heartbeat_id = $('#heartbeat_id').val();\n\n        if (heartbeat_id) {\n            var heartbeat = app.Heartbeats.get(heartbeat_id);\n        } else {\n            var heartbeat = new app.Heartbeat();\n        }\n\n        heartbeat.save({\n            name:        $('#heartbeat_name').val(),\n            interval:    parseInt($('input[name=interval]:checked').val()),\n            project_id:  $('input[name=\"project_id\"]').val()\n        }, {\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n\n                if (!heartbeat_id) {\n                    app.Heartbeats.add(response);\n                }\n            },\n            error: function(model, response, options) {\n                $('.callout-danger', dialog).show();\n\n                var errors = response.responseJSON;\n\n                $('.has-error', dialog).removeClass('has-error');\n                $('.label-danger', dialog).remove();\n\n                $('form input', dialog).each(function (index, element) {\n                    element = $(element);\n\n                    var name = element.attr('name');\n\n                    if (typeof errors[name] !== 'undefined') {\n                        var parent = element.parent('div');\n                        parent.addClass('has-error');\n                        parent.append($('<span>').attr('class', 'label label-danger').text(errors[name]));\n                    }\n                });\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    app.Heartbeat = Backbone.Model.extend({\n        urlRoot: '/heartbeats'\n    });\n\n    var Heartbeats = Backbone.Collection.extend({\n        model: app.Heartbeat,\n        comparator: function(heartbeatA, heartbeatB) {\n            if (heartbeatA.get('name') > heartbeatB.get('name')) {\n                return -1; // before\n            } else if (heartbeatA.get('name') < heartbeatB.get('name')) {\n                return 1; // after\n            }\n\n            return 0; // equal\n        }\n    });\n\n    app.Heartbeats = new Heartbeats();\n\n    app.HeartbeatsTab = Backbone.View.extend({\n        el: '#app',\n        events: {\n\n        },\n        initialize: function() {\n            this.$list = $('#heartbeat_list tbody');\n\n            $('#no_heartbeats').show();\n            $('#heartbeat_list').hide();\n\n            this.listenTo(app.Heartbeats, 'add', this.addOne);\n            this.listenTo(app.Heartbeats, 'reset', this.addAll);\n            this.listenTo(app.Heartbeats, 'remove', this.addAll);\n            this.listenTo(app.Heartbeats, 'all', this.render);\n\n            app.listener.on('heartbeat:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelChanged', function (data) {\n                var heartbeat = app.Heartbeats.get(parseInt(data.model.id));\n\n                if (heartbeat) {\n                    heartbeat.set(data.model);\n                }\n            });\n\n            app.listener.on('heartbeat:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelCreated', function (data) {\n                if (parseInt(data.model.project_id) === parseInt(app.project_id)) {\n                    app.Heartbeats.add(data.model);\n                }\n            });\n\n            app.listener.on('heartbeat:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelTrashed', function (data) {\n                var heartbeat = app.Heartbeats.get(parseInt(data.model.id));\n\n                if (heartbeat) {\n                    app.Heartbeats.remove(heartbeat);\n                }\n            });\n        },\n        render: function () {\n            if (app.Heartbeats.length) {\n                $('#no_heartbeats').hide();\n                $('#heartbeat_list').show();\n            } else {\n                $('#no_heartbeats').show();\n                $('#heartbeat_list').hide();\n            }\n        },\n        addOne: function (heartbeat) {\n\n            var view = new app.HeartbeatView({ \n                model: heartbeat\n            });\n\n            this.$list.append(view.render().el);\n        },\n        addAll: function () {\n            this.$list.html('');\n            app.Heartbeats.each(this.addOne, this);\n        }\n    });\n\n    app.HeartbeatView = Backbone.View.extend({\n        tagName:  'tr',\n        events: {\n            'click .btn-edit': 'editHeartbeat'\n        },\n        initialize: function () {\n            this.listenTo(this.model, 'change', this.render);\n            this.listenTo(this.model, 'destroy', this.remove);\n\n            this.template = _.template($('#heartbeat-template').html());\n        },\n        render: function () {\n            var data = this.model.toJSON();\n\n            data.status_css = 'primary';\n            data.icon_css   = 'question';\n            data.status     = Lang.heartbeats.status.untested;\n            data.has_run    = false;\n\n            if (parseInt(this.model.get('status')) === OK) {\n                data.status_css = 'success';\n                data.icon_css   = 'check';\n                data.status     = Lang.heartbeats.status.ok;\n                data.has_run    = true;\n            } else if (parseInt(this.model.get('status')) === MISSING) {\n                data.status_css = 'danger';\n                data.icon_css   = 'warning';\n                data.status     = Lang.heartbeats.status.missing;\n                data.has_run    = data.last_activity ? true : false;\n            }\n\n            data.interval_label = Lang.heartbeats.intervals[data.interval];\n\n            data.formatted_date = '';\n            if (data.has_run) {\n                data.formatted_date = moment(data.last_activity).format('Do MMMM YYYY h:mm:ss A');\n            }\n\n            this.$el.html(this.template(data));\n\n            return this;\n        },\n        editHeartbeat: function() {\n            // FIXME: Sure this is wrong?\n            $('#heartbeat_id').val(this.model.id);\n            $('#heartbeat_name').val(this.model.get('name'));\n            $('#heartbeat_interval_' + this.model.get('interval')).prop('checked', true);\n        }\n    });\n})(jQuery);","var app = app || {};\n\n(function ($) {\n    // FIXME: This seems very wrong\n    $('#notification').on('show.bs.modal', function (event) {\n        var button = $(event.relatedTarget);\n        var modal = $(this);\n        var title = Lang.notifications.create;\n\n        $('.btn-danger', modal).hide();\n        $('.callout-danger', modal).hide();\n        $('.has-error', modal).removeClass('has-error');\n        $('.label-danger', modal).remove();\n\n        if (button.hasClass('btn-edit')) {\n            title = Lang.notifications.edit;\n            $('.btn-danger', modal).show();\n        } else {\n            $('#notification_id').val('');\n            $('#notification_name').val('');\n            $('#notification_webhook').val('');\n            $('#notification_channel').val('');\n            $('#notification_icon').val('');\n            $('#notification_failure_only').prop('checked', true);\n        }\n\n        modal.find('.modal-title span').text(title);\n    });\n\n    // FIXME: This seems very wrong\n    $('#notification button.btn-delete').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-trash');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var notification = app.Notifications.get($('#notification_id').val());\n\n        notification.destroy({\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            },\n            error: function() {\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    // FIXME: This seems very wrong\n    $('#notification button.btn-save').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-save');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var notification_id = $('#notification_id').val();\n\n        if (notification_id) {\n            var notification = app.Notifications.get(notification_id);\n        } else {\n            var notification = new app.Notification();\n        }\n\n        notification.save({\n            name:         $('#notification_name').val(),\n            webhook:      $('#notification_webhook').val(),\n            channel:      $('#notification_channel').val(),\n            icon:         $('#notification_icon').val(),\n            project_id:   $('input[name=\"project_id\"]').val(),\n            failure_only: $('#notification_failure_only').is(':checked')\n        }, {\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n\n                if (!notification_id) {\n                    app.Notifications.add(response);\n                }\n            },\n            error: function(model, response, options) {\n                $('.callout-danger', dialog).show();\n\n                var errors = response.responseJSON;\n\n                $('.has-error', dialog).removeClass('has-error');\n                $('.label-danger', dialog).remove();\n\n                $('form input', dialog).each(function (index, element) {\n                    element = $(element);\n\n                    var name = element.attr('name');\n\n                    if (typeof errors[name] !== 'undefined') {\n                        var parent = element.parent('div');\n                        parent.addClass('has-error');\n                        parent.append($('<span>').attr('class', 'label label-danger').text(errors[name]));\n                    }\n                });\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n\n\n    app.Notification = Backbone.Model.extend({\n        urlRoot: '/notifications'\n    });\n\n    var Notifications = Backbone.Collection.extend({\n        model: app.Notification\n    });\n\n    app.Notifications = new Notifications();\n\n    app.NotificationsTab = Backbone.View.extend({\n        el: '#app',\n        events: {\n\n        },\n        initialize: function() {\n            this.$list = $('#notification_list tbody');\n\n            $('#no_notifications').show();\n            $('#notification_list').hide();\n\n            this.listenTo(app.Notifications, 'add', this.addOne);\n            this.listenTo(app.Notifications, 'reset', this.addAll);\n            this.listenTo(app.Notifications, 'remove', this.addAll);\n            this.listenTo(app.Notifications, 'all', this.render);\n\n\n            app.listener.on('notification:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelChanged', function (data) {\n                var notification = app.Notifications.get(parseInt(data.model.id));\n\n                if (server) {\n                    notification.set(data.model);\n                }\n            });\n\n            app.listener.on('notification:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelCreated', function (data) {\n                if (parseInt(data.model.project_id) === parseInt(app.project_id)) {\n                    app.Notifications.add(data.model);\n                }\n            });\n\n            app.listener.on('notification:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelTrashed', function (data) {\n                var notification = app.Notifications.get(parseInt(data.model.id));\n\n                if (notification) {\n                    app.Notifications.remove(notification);\n                }\n            });\n        },\n        render: function () {\n            if (app.Notifications.length) {\n                $('#no_notifications').hide();\n                $('#notification_list').show();\n            } else {\n                $('#no_notifications').show();\n                $('#notification_list').hide();\n            }\n        },\n        addOne: function (notification) {\n\n            var view = new app.NotificationView({ \n                model: notification\n            });\n\n            this.$list.append(view.render().el);\n        },\n        addAll: function () {\n            this.$list.html('');\n            app.Notifications.each(this.addOne, this);\n        }\n    });\n\n    app.NotificationView = Backbone.View.extend({\n        tagName:  'tr',\n        events: {\n            'click .btn-edit': 'editNotification'\n        },\n        initialize: function () {\n            this.listenTo(this.model, 'change', this.render);\n            this.listenTo(this.model, 'destroy', this.remove);\n\n            this.template = _.template($('#notification-template').html());\n        },\n        render: function () {\n            var data = this.model.toJSON();\n\n            this.$el.html(this.template(data));\n\n            return this;\n        },\n        editNotification: function() {\n            // FIXME: Sure this is wrong?\n            $('#notification_id').val(this.model.id);\n            $('#notification_name').val(this.model.get('name'));\n            $('#notification_webhook').val(this.model.get('webhook'));\n            $('#notification_channel').val(this.model.get('channel'));\n            $('#notification_icon').val(this.model.get('icon'));\n            $('#notification_failure_only').prop('checked', (this.model.get('failure_only') === true));\n        }\n    });\n})(jQuery);","var app = app || {};\n\n(function ($) {\n    // FIXME: This seems very wrong\n    $('#notifyemail').on('show.bs.modal', function (event) {\n        var button = $(event.relatedTarget);\n        var modal = $(this);\n        var title = Lang.notifyEmails.create;\n\n        $('.btn-danger', modal).hide();\n        $('.callout-danger', modal).hide();\n        $('.has-error', modal).removeClass('has-error');\n        $('.label-danger', modal).remove();\n\n        if (button.hasClass('btn-edit')) {\n            title = Lang.notifyEmails.edit;\n            $('.btn-danger', modal).show();\n        } else {\n            $('#notifyemail_id').val('');\n            $('#notifyemail_name').val('');\n            $('#notifyemail_address').val('');\n        }\n\n        modal.find('.modal-title span').text(title);\n    });\n\n    // FIXME: This seems very wrong\n    $('#notifyemail button.btn-delete').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-trash');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var file = app.NotifyEmails.get($('#notifyemail_id').val());\n\n        file.destroy({\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            },\n            error: function() {\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    // FIXME: This seems very wrong\n    $('#notifyemail button.btn-save').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-save');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var notifyemail_id = $('#notifyemail_id').val();\n\n        if (notifyemail_id) {\n            var file = app.NotifyEmails.get(notifyemail_id);\n        } else {\n            var file = new app.NotifyEmail();\n        }\n\n        file.save({\n            name:       $('#notifyemail_name').val(),\n            email:      $('#notifyemail_address').val(),\n            project_id: $('input[name=\"project_id\"]').val()\n        }, {\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n\n                if (!notifyemail_id) {\n                    app.NotifyEmails.add(response);\n                }\n            },\n            error: function(model, response, options) {\n                $('.callout-danger', dialog).show();\n\n                var errors = response.responseJSON;\n\n                $('.has-error', dialog).removeClass('has-error');\n                $('.label-danger', dialog).remove();\n\n                $('form input', dialog).each(function (index, element) {\n                    element = $(element);\n\n                    var name = element.attr('name');\n\n                    if (typeof errors[name] !== 'undefined') {\n                        var parent = element.parent('div');\n                        parent.addClass('has-error');\n                        parent.append($('<span>').attr('class', 'label label-danger').text(errors[name]));\n                    }\n                });\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    app.NotifyEmail = Backbone.Model.extend({\n        urlRoot: '/notify-email'\n    });\n\n    var NotifyEmails = Backbone.Collection.extend({\n        model: app.NotifyEmail\n    });\n\n    app.NotifyEmails = new NotifyEmails();\n\n    app.NotifyEmailsTab = Backbone.View.extend({\n        el: '#app',\n        events: {\n\n        },\n        initialize: function() {\n            this.$list = $('#notifyemail_list tbody');\n\n            $('#no_notifyemails').show();\n            $('#notifyemail_list').hide();\n\n            this.listenTo(app.NotifyEmails, 'add', this.addOne);\n            this.listenTo(app.NotifyEmails, 'reset', this.addAll);\n            this.listenTo(app.NotifyEmails, 'remove', this.addAll);\n            this.listenTo(app.NotifyEmails, 'all', this.render);\n\n            app.listener.on('notifyemail:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelChanged', function (data) {\n                var email = app.NotifyEmails.get(parseInt(data.model.id));\n\n                if (server) {\n                    email.set(data.model);\n                }\n            });\n\n            app.listener.on('notifyemail:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelCreated', function (data) {\n                if (parseInt(data.model.project_id) === parseInt(app.project_id)) {\n                    app.NotifyEmails.add(data.model);\n                }\n            });\n\n            app.listener.on('notifyemail:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelTrashed', function (data) {\n                var email = app.NotifyEmails.get(parseInt(data.model.id));\n\n                if (email) {\n                    app.NotifyEmails.remove(email);\n                }\n            });\n        },\n        render: function () {\n            if (app.NotifyEmails.length) {\n                $('#no_notifyemails').hide();\n                $('#notifyemail_list').show();\n            } else {\n                $('#no_notifyemails').show();\n                $('#notifyemail_list').hide();\n            }\n        },\n        addOne: function (file) {\n\n            var view = new app.EmailView({ \n                model: file\n            });\n\n            this.$list.append(view.render().el);\n        },\n        addAll: function () {\n            this.$list.html('');\n            app.NotifyEmails.each(this.addOne, this);\n        }\n    });\n\n    app.EmailView = Backbone.View.extend({\n        tagName:  'tr',\n        events: {\n            'click .btn-edit': 'editEmail'\n        },\n        initialize: function () {\n            this.listenTo(this.model, 'change', this.render);\n            this.listenTo(this.model, 'destroy', this.remove);\n\n            this.template = _.template($('#notifyemail-template').html());\n        },\n        render: function () {\n            var data = this.model.toJSON();\n\n            this.$el.html(this.template(data));\n\n            return this;\n        },\n        editEmail: function() {\n            // FIXME: Sure this is wrong?\n            $('#notifyemail_id').val(this.model.id);\n            $('#notifyemail_name').val(this.model.get('name'));\n            $('#notifyemail_address').val(this.model.get('email'));\n        }\n    });\n\n})(jQuery);","var app = app || {};\n\n(function ($) {\n    // FIXME: This seems very wrong\n    $('#sharefile').on('show.bs.modal', function (event) {\n        var button = $(event.relatedTarget);\n        var modal = $(this);\n        var title = Lang.sharedFiles.create;\n\n        $('.btn-danger', modal).hide();\n        $('.callout-danger', modal).hide();\n        $('.has-error', modal).removeClass('has-error');\n        $('.label-danger', modal).remove();\n\n        if (button.hasClass('btn-edit')) {\n            title = Lang.sharedFiles.edit;\n            $('.btn-danger', modal).show();\n        } else {\n            $('#file_id').val('');\n            $('#name').val('');\n            $('#file').val('');\n        }\n\n        modal.find('.modal-title span').text(title);\n    });\n\n    // FIXME: This seems very wrong\n    $('#sharefile button.btn-delete').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-trash');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var file = app.SharedFiles.get($('#file_id').val());\n\n        file.destroy({\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            },\n            error: function() {\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    // FIXME: This seems very wrong\n    $('#sharefile button.btn-save').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-save');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var file_id = $('#file_id').val();\n\n        if (file_id) {\n            var file = app.SharedFiles.get(file_id);\n        } else {\n            var file = new app.SharedFile();\n        }\n\n        file.save({\n            name:       $('#name').val(),\n            file:       $('#file').val(),\n            project_id: $('input[name=\"project_id\"]').val()\n        }, {\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n\n                if (!file_id) {\n                    app.SharedFiles.add(response);\n                }\n            },\n            error: function(model, response, options) {\n                $('.callout-danger', dialog).show();\n\n                var errors = response.responseJSON;\n\n                $('.has-error', dialog).removeClass('has-error');\n                $('.label-danger', dialog).remove();\n\n                $('form input', dialog).each(function (index, element) {\n                    element = $(element);\n\n                    var name = element.attr('name');\n\n                    if (typeof errors[name] !== 'undefined') {\n                        var parent = element.parent('div');\n                        parent.addClass('has-error');\n                        parent.append($('<span>').attr('class', 'label label-danger').text(errors[name]));\n                    }\n                });\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    app.SharedFile = Backbone.Model.extend({\n        urlRoot: '/shared-files'\n    });\n\n    var SharedFiles = Backbone.Collection.extend({\n        model: app.SharedFile\n    });\n\n    app.SharedFiles = new SharedFiles();\n\n    app.SharedFilesTab = Backbone.View.extend({\n        el: '#app',\n        events: {\n\n        },\n        initialize: function() {\n            this.$list = $('#file_list tbody');\n\n            $('#no_files').show();\n            $('#file_list').hide();\n\n            this.listenTo(app.SharedFiles, 'add', this.addOne);\n            this.listenTo(app.SharedFiles, 'reset', this.addAll);\n            this.listenTo(app.SharedFiles, 'remove', this.addAll);\n            this.listenTo(app.SharedFiles, 'all', this.render);\n\n            app.listener.on('sharedfile:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelChanged', function (data) {\n                var share = app.SharedFiles.get(parseInt(data.model.id));\n\n                if (share) {\n                    share.set(data.model);\n                }\n            });\n\n            app.listener.on('sharedfile:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelCreated', function (data) {\n                if (parseInt(data.model.project_id) === parseInt(app.project_id)) {\n                    app.SharedFiles.add(data.model);\n                }\n            });\n\n            app.listener.on('sharedfile:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelTrashed', function (data) {\n                var share = app.SharedFiles.get(parseInt(data.model.id));\n\n                if (share) {\n                    app.SharedFiles.remove(share);\n                }\n            });\n        },\n        render: function () {\n            if (app.SharedFiles.length) {\n                $('#no_files').hide();\n                $('#file_list').show();\n            } else {\n                $('#no_files').show();\n                $('#file_list').hide();\n            }\n        },\n        addOne: function (file) {\n\n            var view = new app.FileView({ \n                model: file\n            });\n\n            this.$list.append(view.render().el);\n        },\n        addAll: function () {\n            this.$list.html('');\n            app.SharedFiles.each(this.addOne, this);\n        }\n    });\n\n    app.FileView = Backbone.View.extend({\n        tagName:  'tr',\n        events: {\n            'click .btn-edit': 'editFile'\n        },\n        initialize: function () {\n            this.listenTo(this.model, 'change', this.render);\n            this.listenTo(this.model, 'destroy', this.remove);\n\n            this.template = _.template($('#files-template').html());\n        },\n        render: function () {\n            var data = this.model.toJSON();\n\n            this.$el.html(this.template(data));\n\n            return this;\n        },\n        editFile: function() {\n            // FIXME: Sure this is wrong?\n            $('#file_id').val(this.model.id);\n            $('#name').val(this.model.get('name'));\n            $('#file').val(this.model.get('file'));\n        }\n    });\n\n})(jQuery);","var app = app || {};\n\n(function ($) {\n\n    var editor;\n    var previewfile;\n\n    $('#projectfile, #view-projectfile').on('hidden.bs.modal', function (event) {\n        editor.destroy();\n    });\n\n    $('#view-projectfile').on('show.bs.modal', function (event) {\n        editor = ace.edit('preview-content');\n        editor.setReadOnly(true);\n        editor.getSession().setUseWrapMode(true);\n\n        var extension = previewfile.substr(previewfile.lastIndexOf('.') + 1).toLowerCase();\n\n        if (extension === 'php' || extension === 'ini') {\n            editor.getSession().setMode('ace/mode/' + extension);\n        } else if (extension === 'yml') {\n            editor.getSession().setMode('ace/mode/yaml');\n        }\n    });\n\n    // FIXME: This seems very wrong\n    $('#projectfile').on('show.bs.modal', function (event) {\n        var button = $(event.relatedTarget);\n        var modal = $(this);\n        var title = Lang.projectFiles.create;\n\n        editor = ace.edit('project-file-content');\n\n        var filename = $('#project-file-path').val();\n        var extension = filename.substr(filename.lastIndexOf('.') + 1).toLowerCase();\n\n        if (extension === 'php' || extension === 'ini') {\n            editor.getSession().setMode('ace/mode/' + extension);\n        } else if (extension === 'yml') {\n            editor.getSession().setMode('ace/mode/yaml');\n        }\n\n        $('.btn-danger', modal).hide();\n        $('.callout-danger', modal).hide();\n        $('.has-error', modal).removeClass('has-error');\n        $('.label-danger', modal).remove();\n\n        if (button.hasClass('btn-edit')) {\n            title = Lang.projectFiles.edit;\n            $('.btn-danger', modal).show();\n        } else {\n            $('#project_file_id').val('');\n            $('#project-file-name').val('');\n            $('#project-file-path').val('');\n            editor.setValue('');\n            editor.gotoLine(1);\n        }\n\n        modal.find('.modal-title span').text(title);\n    });\n\n\n    // FIXME: This seems very wrong\n    $('#projectfile button.btn-delete').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-trash');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var file = app.ProjectFiles.get($('#project_file_id').val());\n\n        file.destroy({\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            },\n            error: function() {\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    // FIXME: This seems very wrong\n    $('#projectfile button.btn-save').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-save');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var project_file_id = $('#project_file_id').val();\n\n        if (project_file_id) {\n            var file = app.ProjectFiles.get(project_file_id);\n        } else {\n            var file = new app.ProjectFile();\n        }\n\n        file.save({\n            name:       $('#project-file-name').val(),\n            path:       $('#project-file-path').val(),\n            content:    editor.getValue(),\n            project_id: $('input[name=\"project_id\"]').val()\n        }, {\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n\n                if (!project_file_id) {\n                    app.ProjectFiles.add(response);\n                }\n\n                editor.setValue('');\n                editor.gotoLine(1);\n            },\n            error: function(model, response, options) {\n                $('.callout-danger', dialog).show();\n\n                var errors = response.responseJSON;\n\n                $('.has-error', dialog).removeClass('has-error');\n                $('.label-danger', dialog).remove();\n\n                $('form input', dialog).each(function (index, element) {\n                    element = $(element);\n\n                    var name = element.attr('name');\n\n                    if (typeof errors[name] !== 'undefined') {\n                        var parent = element.parent('div');\n                        parent.addClass('has-error');\n                        parent.append($('<span>').attr('class', 'label label-danger').text(errors[name]));\n                    }\n                });\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    app.ProjectFile = Backbone.Model.extend({\n        urlRoot: '/project-file'\n    });\n\n    var ProjectFiles = Backbone.Collection.extend({\n        model: app.ProjectFile\n    });\n\n    app.ProjectFiles = new ProjectFiles();\n\n    app.ProjectFilesTab = Backbone.View.extend({\n        el: '#app',\n        events: {\n\n        },\n        initialize: function() {\n            this.$list = $('#projectfile_list tbody');\n\n            $('#no_projectfiles').show();\n            $('#projectfile_list').hide();\n\n            this.listenTo(app.ProjectFiles, 'add', this.addOne);\n            this.listenTo(app.ProjectFiles, 'reset', this.addAll);\n            this.listenTo(app.ProjectFiles, 'remove', this.addAll);\n            this.listenTo(app.ProjectFiles, 'all', this.render);\n\n            app.listener.on('projectfile:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelChanged', function (data) {\n                var file = app.ProjectFiles.get(parseInt(data.model.id));\n\n                if (file) {\n                    file.set(data.model);\n                }\n            });\n\n            app.listener.on('projectfile:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelCreated', function (data) {\n                if (parseInt(data.model.project_id) === parseInt(app.project_id)) {\n                    app.ProjectFiles.add(data.model);\n                }\n            });\n\n            app.listener.on('projectfile:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelTrashed', function (data) {\n                var file = app.ProjectFiles.get(parseInt(data.model.id));\n\n                if (file) {\n                    app.ProjectFiles.remove(file);\n                }\n            });\n        },\n        render: function () {\n            if (app.ProjectFiles.length) {\n                $('#no_projectfiles').hide();\n                $('#projectfile_list').show();\n            } else {\n                $('#no_projectfiles').show();\n                $('#projectfile_list').hide();\n            }\n        },\n        addOne: function (file) {\n\n            var view = new app.ProjectFileView({ \n                model: file\n            });\n\n            this.$list.append(view.render().el);\n        },\n        addAll: function () {\n            this.$list.html('');\n            app.ProjectFiles.each(this.addOne, this);\n        }\n    });\n\n    app.ProjectFileView = Backbone.View.extend({\n        tagName:  'tr',\n        events: {\n            'click .btn-edit': 'editFile',\n            'click .btn-view': 'viewFile'\n        },\n        initialize: function () {\n            this.listenTo(this.model, 'change', this.render);\n            this.listenTo(this.model, 'destroy', this.remove);\n\n            this.template = _.template($('#project-files-template').html());\n        },\n        render: function () {\n            var data = this.model.toJSON();\n\n            this.$el.html(this.template(data));\n\n            return this;\n        },\n        viewFile: function() {\n            previewfile = this.model.get('path');\n            $('#preview-content').text(this.model.get('content'));\n        },\n        editFile: function() {\n            // FIXME: Sure this is wrong?\n            $('#project_file_id').val(this.model.id);\n            $('#project-file-name').val(this.model.get('name'));\n            $('#project-file-path').val(this.model.get('path'));\n            $('#project-file-content').text(this.model.get('content'));\n        }\n    });\n\n})(jQuery);","var app = app || {};\n\n(function ($) {\n    var SUCCESS = 0;\n    var FAILED = 1;\n\n    $('#checkurl').on('show.bs.modal', function (event) {\n        var button = $(event.relatedTarget);\n        var modal = $(this);\n        var title = Lang.CheckUrls.create;\n\n        $('.btn-danger', modal).hide();\n        $('.callout-danger', modal).hide();\n        $('.has-error', modal).removeClass('has-error');\n        $('.label-danger', modal).remove();\n\n        if (button.hasClass('btn-edit')) {\n            title = Lang.CheckUrls.edit;\n            $('.btn-danger', modal).show();\n        } else {\n            $('#url_id').val('');\n            $('#title').val('');\n            $('#url').val('');\n            $('#period_5').prop('checked', true);\n            //$('#is_report').prop('checked', false);\n        }\n\n        modal.find('.modal-title span').text(title);\n    });\n\n    $('#checkurl button.btn-delete').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-trash');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var url = app.CheckUrls.get($('#url_id').val());\n\n        url.destroy({\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            },\n            error: function() {\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    $('#checkurl button.btn-save').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-save');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var url_id = $('#url_id').val();\n\n        if (url_id) {\n            var url = app.CheckUrls.get(url_id);\n        } else {\n            var url = new app.CheckUrl();\n        }\n\n        url.save({\n            title:      $('#title').val(),\n            url:        $('#url').val(),\n            is_report:  true, // $('#is_report').prop('checked'),\n            period:     parseInt($('input[name=period]:checked').val()),\n            project_id: $('input[name=\"project_id\"]').val()\n        }, {\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n\n                if (!url_id) {\n                    app.CheckUrls.add(response);\n                }\n            },\n            error: function(model, response, options) {\n                $('.callout-danger', dialog).show();\n\n                var errors = response.responseJSON;\n\n                $('.has-error', dialog).removeClass('has-error');\n                $('.label-danger', dialog).remove();\n\n                $('form input', dialog).each(function (index, element) {\n                    element = $(element);\n\n                    var name = element.attr('name');\n\n                    if (typeof errors[name] !== 'undefined') {\n                        var parent = element.parent('div');\n                        parent.addClass('has-error');\n                        parent.append($('<span>').attr('class', 'label label-danger').text(errors[name]));\n                    }\n                });\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    app.CheckUrl = Backbone.Model.extend({\n        urlRoot: '/check-url'\n    });\n\n    var CheckUrls = Backbone.Collection.extend({\n        model: app.CheckUrl\n    });\n\n    app.CheckUrls = new CheckUrls();\n\n    app.CheckUrlsTab = Backbone.View.extend({\n        el: '#app',\n        events: {\n\n        },\n        initialize: function() {\n            this.$list = $('#checkurl_list tbody');\n\n            $('#no_checkurls').show();\n            $('#checkurl_list').hide();\n\n            this.listenTo(app.CheckUrls, 'add', this.addOne);\n            this.listenTo(app.CheckUrls, 'reset', this.addAll);\n            this.listenTo(app.CheckUrls, 'remove', this.addAll);\n            this.listenTo(app.CheckUrls, 'all', this.render);\n\n            app.listener.on('checkurl:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelChanged', function (data) {\n                var link = app.CheckUrls.get(parseInt(data.model.id));\n\n                if (link) {\n                    link.set(data.model);\n                }\n            });\n\n            app.listener.on('checkurl:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelCreated', function (data) {\n                if (parseInt(data.model.project_id) === parseInt(app.project_id)) {\n                    app.CheckUrls.add(data.model);\n                }\n            });\n\n            app.listener.on('checkurl:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelTrashed', function (data) {\n                var link = app.CheckUrls.get(parseInt(data.model.id));\n\n                if (link) {\n                    app.CheckUrls.remove(link);\n                }\n            });\n        },\n        render: function () {\n            if (app.CheckUrls.length) {\n                $('#no_checkurls').hide();\n                $('#checkurl_list').show();\n            } else {\n                $('#no_checkurls').show();\n                $('#checkurl_list').hide();\n            }\n        },\n        addOne: function (url) {\n            var view = new app.CheckUrlView({ \n                model: url\n            });\n\n            this.$list.append(view.render().el);\n        },\n        addAll: function () {\n            this.$list.html('');\n            app.CheckUrls.each(this.addOne, this);\n        }\n    });\n\n    app.CheckUrlView = Backbone.View.extend({\n        tagName:  'tr',\n        events: {\n            'click .btn-edit': 'editUrl'\n        },\n        initialize: function () {\n            this.listenTo(this.model, 'change', this.render);\n            this.listenTo(this.model, 'destroy', this.remove);\n\n            this.template = _.template($('#checkUrls-template').html());\n        },\n        render: function () {\n            var data = this.model.toJSON();\n\n            if (parseInt(data.last_status) === FAILED) {\n                data.status_css = 'danger';\n                data.icon_css   = 'warning';\n                data.status     = Lang.CheckUrls.failure;\n            } else {\n                data.status_css = 'success';\n                data.icon_css   = 'check';\n                data.status     = Lang.CheckUrls.success;\n            }\n\n            data.interval_label = data.period + ' ' + Lang.CheckUrls.length;\n\n            // data.report = Lang.CheckUrls.no;\n\n            // if (data.is_report) {\n            //     data.report = Lang.CheckUrls.yes;\n            // }\n\n            this.$el.html(this.template(data));\n\n            return this;\n        },\n        editUrl: function() {\n            $('#url_id').val(this.model.id);\n            $('#title').val(this.model.get('title'));\n            $('#url').val(this.model.get('url'));\n            $('#period_' + this.model.get('period')).prop('checked', true);\n            $('#is_report').prop('checked', this.model.get('is_report'));\n        }\n    });\n\n})(jQuery);","var app = app || {};\n\n(function ($) {\n   // FIXME: This seems very wrong\n    $('#variable').on('show.bs.modal', function (event) {\n        var button = $(event.relatedTarget);\n        var modal = $(this);\n        var title = Lang.variables.create;\n\n        $('.btn-danger', modal).hide();\n        $('.callout-danger', modal).hide();\n        $('.has-error', modal).removeClass('has-error');\n        $('.label-danger', modal).remove();\n\n        if (button.hasClass('btn-edit')) {\n            title = Lang.variables.edit;\n            $('.btn-danger', modal).show();\n        } else {\n            $('#variable_id').val('');\n            $('#variable_name').val('');\n            $('#variable_value').val('');\n        }\n\n        modal.find('.modal-title span').text(title);\n    });\n\n    // FIXME: This seems very wrong\n    $('#variable button.btn-delete').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-trash');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var variable = app.Variables.get($('#variable_id').val());\n\n        variable.destroy({\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            },\n            error: function() {\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    // FIXME: This seems very wrong\n    $('#variable button.btn-save').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-save');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var variable_id = $('#variable_id').val();\n\n        if (variable_id) {\n            var variable = app.Variables.get(variable_id);\n        } else {\n            var variable = new app.Variable();\n        }\n\n        variable.save({\n            name:       $('#variable_name').val(),\n            value:      $('#variable_value').val(),\n            project_id: $('input[name=\"project_id\"]').val(),\n        }, {\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n\n                if (!variable_id) {\n                    app.Variables.add(response);\n                }\n            },\n            error: function(model, response, options) {\n                $('.callout-danger', dialog).show();\n\n                var errors = response.responseJSON;\n\n                $('.has-error', dialog).removeClass('has-error');\n                $('.label-danger', dialog).remove();\n\n                $('form input', dialog).each(function (index, element) {\n                    element = $(element);\n\n                    var name = element.attr('name');\n\n                    if (typeof errors[name] !== 'undefined') {\n                        var parent = element.parent('div');\n                        parent.addClass('has-error');\n                        parent.append($('<span>').attr('class', 'label label-danger').text(errors[name]));\n                    }\n                });\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    app.Variable = Backbone.Model.extend({\n        urlRoot: '/variables',\n        initialize: function() {\n\n        }\n    });\n\n    var Variables = Backbone.Collection.extend({\n        model: app.Variable\n    });\n\n    app.Variables = new Variables();\n\n    app.VariablesTab = Backbone.View.extend({\n        el: '#app',\n        events: {\n\n        },\n        initialize: function() {\n            this.$list = $('#variable_list tbody');\n\n            $('#variable_list').hide();\n\n            this.listenTo(app.Variables, 'add', this.addOne);\n            this.listenTo(app.Variables, 'reset', this.addAll);\n            this.listenTo(app.Variables, 'remove', this.addAll);\n            this.listenTo(app.Variables, 'all', this.render);\n\n            app.listener.on('variable:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelChanged', function (data) {\n                $('#variable_' + data.model.id).html(data.model.name);\n\n                var variable = app.Variables.get(parseInt(data.model.id));\n\n                if (variable) {\n                    variable.set(data.model);\n                }\n            });\n\n            app.listener.on('variable:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelCreated', function (data) {\n                app.Variables.add(data.model);\n            });\n\n            app.listener.on('variable:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelTrashed', function (data) {\n                var variable = app.Variables.get(parseInt(data.model.id));\n\n                if (variable) {\n                    app.Variables.remove(variable);\n                }\n            });\n        },\n        render: function () {\n            if (app.Variables.length) {\n                $('#variable_list').show();\n            } else {\n                $('#variable_list').hide();\n            }\n        },\n        addOne: function (variable) {\n\n            var view = new app.VariableView({\n                model: variable\n            });\n\n            this.$list.append(view.render().el);\n        },\n        addAll: function () {\n            this.$list.html('');\n            app.Variables.each(this.addOne, this);\n        }\n    });\n\n    app.VariableView = Backbone.View.extend({\n        tagName:  'tr',\n        events: {\n            'click .btn-edit': 'editVariable'\n        },\n        initialize: function () {\n            this.listenTo(this.model, 'change', this.render);\n            this.listenTo(this.model, 'destroy', this.remove);\n\n            this.template = _.template($('#variable-template').html());\n        },\n        render: function () {\n            var data = this.model.toJSON();\n\n            this.$el.html(this.template(data));\n\n            return this;\n        },\n        editVariable: function() {\n            $('#variable_id').val(this.model.id);\n            $('#variable_name').val(this.model.get('name'));\n            $('#variable_value').val(this.model.get('value'));\n        }\n    });\n})(jQuery);","var app = app || {};\n\n(function ($) {\n    var COMPLETED = 0;\n    var PENDING   = 1;\n    var RUNNING   = 2;\n    var FAILED    = 3;\n    var CANCELLED = 4;\n\n    $('#log').on('show.bs.modal', function (event) {\n        var button = $(event.relatedTarget);\n        var log_id = button.attr('id').replace('log_', '');\n\n        var step = $('h3 span', button.parents('.box')).text();\n        var modal = $(this);\n        var log = $('pre', modal);\n        var loader = $('#loading', modal);\n\n        log.hide();\n        loader.show();\n\n        $('#action', modal).text(step);\n        log.text('');\n\n        $.ajax({\n            type: 'GET',\n            url: '/log/' + log_id\n        }).done(function (data) {\n            var output = data.output;\n            // FIXME: There has to be a cleaner way to do this surely?\n            output = output.replace(/<\\/error>/g, '</span>')\n            output = output.replace(/<\\/info>/g, '</span>');\n            output = output.replace(/<error>/g, '<span class=\"text-red\">')\n            output = output.replace(/<info>/g, '<span class=\"text-default\">');\n\n            log.html(output);\n\n            log.show();\n            loader.hide();\n        }).fail(function() {\n\n        }).always(function() {\n\n        });\n    });\n\n    app.ServerLog = Backbone.Model.extend({\n        urlRoot: '/status'\n    });\n\n    var Deployment = Backbone.Collection.extend({\n        model: app.ServerLog\n    });\n\n    app.Deployment = new Deployment();\n\n    app.DeploymentView = Backbone.View.extend({\n        el: '#app',\n        $containers: [],\n        events: {\n\n        },\n        initialize: function() {\n            var that = this;\n            $('.deploy-step tbody').each(function(index, element) {\n                that.$containers.push({\n                    step: parseInt($(element).attr('id').replace('step_', '')),\n                    element: element\n                })\n            });\n\n            this.listenTo(app.Deployment, 'add', this.addOne);\n            this.listenTo(app.Deployment, 'reset', this.addAll);\n            this.listenTo(app.Deployment, 'remove', this.addAll);\n            this.listenTo(app.Deployment, 'all', this.render);\n\n            app.listener.on('serverlog:REBELinBLUE\\\\Deployer\\\\Events\\\\ServerLogChanged', function (data) {\n                var deployment = app.Deployment.get(data.log_id);\n\n                if (deployment) {\n                    deployment.set({\n                        status: data.status,\n                        output: data.output,\n                        runtime: data.runtime,\n                        started_at: data.started_at ? data.started_at : false,\n                        finished_at: data.finished_at ? data.finished_at : false\n                    });\n\n                    // FIXME: If cancelled update all other deployments straight away\n                    // FIXME: If completed fake making the next model \"running\" so it looks responsive\n                }\n            });\n\n            app.listener.on('deployment:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelChanged', function (data) {\n                if (parseInt(data.model.project_id) === parseInt(app.project_id)) {\n                    if (data.model.repo_failure) {\n                        $('#repository_error').show();\n                    }\n                }\n            });\n\n        },\n        addOne: function (step) {\n            var view = new app.LogView({\n                model: step\n            });\n\n            var found = _.find(this.$containers, function(element) {\n                return parseInt(element.step) === parseInt(step.get('deploy_step_id'));\n            });\n\n            $(found.element).append(view.render().el);\n\n        },\n        addAll: function () {\n            $(this.$containers).each(function (index, element) {\n                element.html('');\n            });\n\n            app.Commands.each(this.addOne, this);\n        }\n    });\n\n    app.LogView = Backbone.View.extend({\n        tagName:  'tr',\n        events: {\n            //'click .btn-log': 'showLog',\n        },\n        initialize: function () {\n            this.listenTo(this.model, 'change', this.render);\n            this.listenTo(this.model, 'destroy', this.remove);\n\n            this.template = _.template($('#log-template').html());\n        },\n        render: function () {\n            var data = this.model.toJSON();\n\n            data.status_css = 'info';\n            data.icon_css = 'clock-o';\n            data.status = Lang.status.pending;\n\n            if (parseInt(this.model.get('status')) === COMPLETED) {\n                data.status_css = 'success';\n                data.icon_css = 'check';\n                data.status = Lang.status.completed;\n            } else if (parseInt(this.model.get('status')) === RUNNING) {\n                data.status_css = 'warning';\n                data.icon_css = 'spinner fa-spin';\n                data.status = Lang.status.running;\n            } else if (parseInt(this.model.get('status')) === FAILED || parseInt(this.model.get('status')) === CANCELLED) {\n                data.status_css = 'danger';\n                data.icon_css = 'warning';\n\n                data.status = Lang.status.failed;\n                if (parseInt(this.model.get('status')) === CANCELLED) {\n                    data.status = Lang.status.cancelled;\n                }\n            }\n\n            data.formatted_start_time = data.started_at ? moment(data.started_at).format('h:mm:ss A') : false;\n            data.formatted_end_time   = data.finished_at ? moment(data.finished_at).format('h:mm:ss A') : false;\n\n            this.$el.html(this.template(data));\n\n            return this;\n        }\n    });\n})(jQuery);\n","var app = app || {};\n\n(function ($) {\n    $('.command-list table').sortable({\n        containerSelector: 'table',\n        itemPath: '> tbody',\n        itemSelector: 'tr',\n        placeholder: '<tr class=\"placeholder\"/>',\n        delay: 500,\n        onDrop: function (item, container, _super) {\n            _super(item, container);\n\n            var ids = [];\n            $('tbody tr td:first-child', container.el[0]).each(function (idx, element) {\n                ids.push($(element).data('command-id'));\n            });\n\n            $.ajax({\n                url: '/commands/reorder',\n                method: 'POST',\n                data: {\n                    commands: ids\n                }\n            });\n        }\n    });\n\n    var editor;\n\n    $('#command').on('hidden.bs.modal', function (event) {\n        editor.destroy();\n    });\n\n    // FIXME: This seems very wrong\n    $('#command').on('show.bs.modal', function (event) {\n        var button = $(event.relatedTarget);\n        var modal = $(this);\n        var title = Lang.create;\n\n        editor = ace.edit('command_script');\n        editor.getSession().setMode('ace/mode/sh');\n\n        $('.btn-danger', modal).hide();\n        $('.callout-danger', modal).hide();\n        $('.has-error', modal).removeClass('has-error');\n        $('.label-danger', modal).remove();\n\n        if (button.hasClass('btn-edit')) {\n            title = Lang.edit;\n            $('.btn-danger', modal).show();\n        } else {\n            $('#command_id').val('');\n            $('#command_step').val(button.data('step'));\n            $('#command_name').val('');\n            editor.setValue('');\n            editor.gotoLine(1);\n            $('#command_user').val('');\n            $('#command_optional').prop('checked', false);\n            $('#command_default_on').prop('checked', false);\n            $('#command_default_on_row').addClass('hide');\n\n            $('.command-server').prop('checked', true);\n        }\n\n        modal.find('.modal-title span').text(title);\n    });\n\n    // FIXME: This seems very wrong\n    $('#command button.btn-delete').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-trash');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var command = app.Commands.get($('#command_id').val());\n\n        command.destroy({\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            },\n            error: function() {\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    $('#command_optional').on('change', function (event) {\n        $('#command_default_on_row').addClass('hide');\n        if ($(this).is(':checked') === true) {\n            $('#command_default_on_row').removeClass('hide');\n        }\n    });\n\n    // FIXME: This seems very wrong\n    $('#command button.btn-save').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-save');\n        dialog.find(':input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var command_id = $('#command_id').val();\n\n        if (command_id) {\n            var command = app.Commands.get(command_id);\n        } else {\n            var command = new app.Command();\n        }\n\n        var server_ids = [];\n\n        $('.command-server:checked').each(function() {\n            server_ids.push($(this).val());\n        });\n\n        command.save({\n            name:       $('#command_name').val(),\n            script:     editor.getValue(),\n            user:       $('#command_user').val(),\n            step:       $('#command_step').val(),\n            project_id: $('input[name=\"project_id\"]').val(),\n            servers:    server_ids,\n            optional:   $('#command_optional').is(':checked'),\n            default_on: $('#command_default_on').is(':checked')\n        }, {\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find(':input').removeAttr('disabled');\n\n                if (!command_id) {\n                    app.Commands.add(response);\n                }\n\n                editor.setValue('');\n                editor.gotoLine(1);\n            },\n            error: function(model, response, options) {\n                $('.callout-danger', dialog).show();\n\n                var errors = response.responseJSON;\n\n                $('.has-error', dialog).removeClass('has-error');\n                $('.label-danger', dialog).remove();\n\n                $('form input', dialog).each(function (index, element) {\n                    element = $(element);\n\n                    var name = element.attr('name');\n\n                    if (typeof errors[name] !== 'undefined') {\n                        var parent = element.parent('div');\n                        parent.addClass('has-error');\n                        parent.append($('<span>').attr('class', 'label label-danger').text(errors[name]));\n                    }\n                });\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find(':input').removeAttr('disabled');\n            }\n        });\n    });\n\n    app.Command = Backbone.Model.extend({\n        urlRoot: '/commands',\n        defaults: function() {\n            return {\n                order: app.Commands.nextOrder()\n            };\n        },\n        isAfter: function() {\n            return (parseInt(this.get('step')) % 3 === 0);\n        }\n    });\n\n    var Commands = Backbone.Collection.extend({\n        model: app.Command,\n        comparator: 'order',\n        nextOrder: function() {\n            if (!this.length) {\n                return 1;\n            }\n\n            return this.last().get('order') + 1;\n        }\n    });\n\n    app.Commands = new Commands();\n\n    app.CommandsTab = Backbone.View.extend({\n        el: '#app',\n        events: {\n\n        },\n        initialize: function() {\n            this.$beforeList = $('#commands-before .command-list tbody');\n            this.$afterList = $('#commands-after .command-list tbody');\n\n            $('.no-commands').show();\n            $('.command-list').hide();\n\n            this.listenTo(app.Commands, 'add', this.addOne);\n            this.listenTo(app.Commands, 'reset', this.addAll);\n            this.listenTo(app.Commands, 'remove', this.addAll);\n            this.listenTo(app.Commands, 'all', this.render);\n\n            // FIXME: Need to regenerate the order!\n\n            app.listener.on('command:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelChanged', function (data) {\n                var command = app.Commands.get(parseInt(data.model.id));\n\n                if (command) {\n                    command.set(data.model);\n                }\n            });\n\n            app.listener.on('command:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelCreated', function (data) {\n                if (parseInt(data.model.project_id) === parseInt(app.project_id)) {\n\n                    // Make sure the command is for this action (clone, install, activate, purge)\n                    if (parseInt(data.model.step) + 1 === parseInt(app.command_action) || parseInt(data.model.step) - 1 === parseInt(app.command_action)) {\n                        app.Commands.add(data.model);\n                    }\n                }\n            });\n\n            app.listener.on('command:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelTrashed', function (data) {\n                var command = app.Commands.get(parseInt(data.model.id));\n\n                if (command) {\n                    app.Commands.remove(command);\n                }\n            });\n        },\n        render: function () {\n            var before = app.Commands.find(function(model) {\n                return !model.isAfter();\n            });\n\n            if (typeof before !== 'undefined') {\n                $('#commands-before .no-commands').hide();\n                $('#commands-before .command-list').show();\n            } else {\n                $('#commands-before .no-commands').show();\n                $('#commands-before .command-list').hide();\n            }\n\n            var after = app.Commands.find(function(model) {\n                return model.isAfter();\n            });\n\n            if (typeof after !== 'undefined') {\n                $('#commands-after .no-commands').hide();\n                $('#commands-after .command-list').show();\n            } else {\n                $('#commands-after .no-commands').show();\n                $('#commands-after .command-list').hide();\n            }\n        },\n        addOne: function (command) {\n            var view = new app.CommandView({\n                model: command\n            });\n\n            if (command.isAfter()) {\n                this.$afterList.append(view.render().el);\n            } else {\n                this.$beforeList.append(view.render().el);\n            }\n        },\n        addAll: function () {\n            this.$beforeList.html('');\n            this.$afterList.html('');\n            app.Commands.each(this.addOne, this);\n        }\n    });\n\n    app.CommandView = Backbone.View.extend({\n        tagName:  'tr',\n        events: {\n            'click .btn-edit': 'editCommand'\n        },\n        initialize: function () {\n            this.listenTo(this.model, 'change', this.render);\n            this.listenTo(this.model, 'destroy', this.remove);\n\n            this.template = _.template($('#command-template').html());\n        },\n        render: function () {\n            var data = this.model.toJSON();\n\n            this.$el.html(this.template(data));\n\n            return this;\n        },\n        editCommand: function() {\n            // FIXME: Sure this is wrong?\n            $('#command_id').val(this.model.id);\n            $('#command_step').val(this.model.get('step'));\n            $('#command_name').val(this.model.get('name'));\n            $('#command_script').text(this.model.get('script'));\n            $('#command_user').val(this.model.get('user'));\n            $('#command_optional').prop('checked', (this.model.get('optional') === true));\n            $('#command_default_on').prop('checked', (this.model.get('default_on') === true));\n\n            $('#command_default_on_row').addClass('hide');\n            if (this.model.get('optional') === true) {\n                $('#command_default_on_row').removeClass('hide');\n            }\n\n            $('.command-server').prop('checked', false);\n            $(this.model.get('servers')).each(function (index, server) {\n                $('#command_server_' + server.id).prop('checked', true);\n            });\n        }\n    });\n})(jQuery);\n","var app = app || {};\n\n(function ($) {\n   // FIXME: This seems very wrong\n    $('#user').on('show.bs.modal', function (event) {\n        var button = $(event.relatedTarget);\n        var modal = $(this);\n        var title = Lang.create;\n\n        $('.btn-danger', modal).hide();\n        $('.callout-danger', modal).hide();\n        $('.existing-only', modal).hide();\n        $('.new-only', modal).hide();\n        $('.has-error', modal).removeClass('has-error');\n        $('.label-danger', modal).remove();\n\n\n        if (button.hasClass('btn-edit')) {\n            title = Lang.edit;\n            $('.btn-danger', modal).show();\n            $('.existing-only', modal).show();\n        } else {\n            $('#user_id').val('');\n            $('#user_name').val('');\n            $('#user_email').val('');\n            $('#user_password').val('');\n            $('#user_password_confirmation').val('');\n\n            $('.new-only', modal).show();\n        }\n\n        modal.find('.modal-title span').text(title);\n    });\n\n    // FIXME: This seems very wrong\n    $('#user button.btn-delete').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-trash');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var user = app.Users.get($('#user_id').val());\n\n        user.destroy({\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            },\n            error: function() {\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-trash');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    // FIXME: This seems very wrong\n    $('#user button.btn-save').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-save');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var user_id = $('#user_id').val();\n\n        if (user_id) {\n            var user = app.Users.get(user_id);\n        } else {\n            var user = new app.User();\n        }\n\n        user.save({\n            name:                  $('#user_name').val(),\n            email:                 $('#user_email').val(),\n            password:              $('#user_password').val(),\n            password_confirmation: $('#user_password_confirmation').val()\n        }, {\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n\n                if (!user_id) {\n                    app.Users.add(response);\n                }\n            },\n            error: function(model, response, options) {\n                $('.callout-danger', dialog).show();\n\n                var errors = response.responseJSON;\n\n                $('.has-error', dialog).removeClass('has-error');\n                $('.label-danger', dialog).remove();\n\n                $('form input', dialog).each(function (index, element) {\n                    element = $(element);\n\n                    var name = element.attr('name');\n\n                    if (typeof errors[name] !== 'undefined') {\n                        var parent = element.parent('div');\n                        parent.addClass('has-error');\n                        parent.append($('<span>').attr('class', 'label label-danger').text(errors[name]));\n                    }\n                });\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    app.User = Backbone.Model.extend({\n        urlRoot: '/admin/users',\n        initialize: function() {\n\n        }\n    });\n\n    var Users = Backbone.Collection.extend({\n        model: app.User\n    });\n\n    app.Users = new Users();\n\n    app.UsersTab = Backbone.View.extend({\n        el: '#app',\n        events: {\n\n        },\n        initialize: function() {\n            this.$list = $('#user_list tbody');\n\n            this.listenTo(app.Users, 'add', this.addOne);\n            this.listenTo(app.Users, 'reset', this.addAll);\n            this.listenTo(app.Users, 'remove', this.addAll);\n            this.listenTo(app.Users, 'all', this.render);\n\n            app.listener.on('user:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelChanged', function (data) {\n                var user = app.Users.get(parseInt(data.model.id));\n\n                if (user) {\n                    user.set(data.model);\n                }\n            });\n\n            app.listener.on('user:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelCreated', function (data) {\n                app.Users.add(data.model);\n            });\n\n            app.listener.on('user:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelTrashed', function (data) {\n                var user = app.Users.get(parseInt(data.model.id));\n\n                if (user) {\n                    app.Users.remove(user);\n                }\n            });\n        },\n        addOne: function (user) {\n            var view = new app.UserView({ \n                model: user\n            });\n\n            this.$list.append(view.render().el);\n        },\n        addAll: function () {\n            this.$list.html('');\n            app.Users.each(this.addOne, this);\n        }\n    });\n\n    app.UserView = Backbone.View.extend({\n        tagName:  'tr',\n        events: {\n            'click .btn-edit': 'editUser'\n        },\n        initialize: function () {\n            this.listenTo(this.model, 'change', this.render);\n            this.listenTo(this.model, 'destroy', this.remove);\n\n            this.template = _.template($('#user-template').html());\n        },\n        render: function () {\n            var data = this.model.toJSON();\n\n            data.created = moment(data.created_at).format('Do MMMM YYYY h:mm:ss A');\n\n            this.$el.html(this.template(data));\n\n            return this;\n        },\n        editUser: function() {\n            $('#user_id').val(this.model.id);\n            $('#user_name').val(this.model.get('name'));\n            $('#user_email').val(this.model.get('email'));\n        }\n    });\n})(jQuery);","var app = app || {};\n\n(function ($) {\n   // FIXME: This seems very wrong\n    $('#group').on('show.bs.modal', function (event) {\n        var button = $(event.relatedTarget);\n        var modal = $(this);\n        var title = Lang.create;\n\n        $('.btn-danger', modal).hide();\n        $('.callout-danger', modal).hide();\n        $('.has-error', modal).removeClass('has-error');\n        $('.label-danger', modal).remove();\n\n        if (button.hasClass('btn-edit')) {\n            title = Lang.edit;\n            $('.btn-danger', modal).show();\n        } else {\n            $('#group_id').val('');\n            $('#group_name').val('');\n        }\n\n        modal.find('.modal-title span').text(title);\n    });\n\n    // FIXME: This seems very wrong\n    $('#group button.btn-save').on('click', function (event) {\n        var target = $(event.currentTarget);\n        var icon = target.find('i');\n        var dialog = target.parents('.modal');\n\n        icon.addClass('fa-refresh fa-spin').removeClass('fa-save');\n        dialog.find('input').attr('disabled', 'disabled');\n        $('button.close', dialog).hide();\n\n        var group_id = $('#group_id').val();\n\n        if (group_id) {\n            var group = app.Groups.get(group_id);\n        } else {\n            var group = new app.Group();\n        }\n\n        group.save({\n            name: $('#group_name').val()\n        }, {\n            wait: true,\n            success: function(model, response, options) {\n                dialog.modal('hide');\n                $('.callout-danger', dialog).hide();\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n\n                if (!group_id) {\n                    app.Groups.add(response);\n                }\n            },\n            error: function(model, response, options) {\n                $('.callout-danger', dialog).show();\n\n                var errors = response.responseJSON;\n\n                $('.has-error', dialog).removeClass('has-error');\n                $('.label-danger', dialog).remove();\n\n                $('form input', dialog).each(function (index, element) {\n                    element = $(element);\n\n                    var name = element.attr('name');\n\n                    if (typeof errors[name] !== 'undefined') {\n                        var parent = element.parent('div');\n                        parent.addClass('has-error');\n                        parent.append($('<span>').attr('class', 'label label-danger').text(errors[name]));\n                    }\n                });\n\n                icon.removeClass('fa-refresh fa-spin').addClass('fa-save');\n                $('button.close', dialog).show();\n                dialog.find('input').removeAttr('disabled');\n            }\n        });\n    });\n\n    app.Group = Backbone.Model.extend({\n        urlRoot: '/admin/groups',\n        initialize: function() {\n\n        }\n    });\n\n    var Groups = Backbone.Collection.extend({\n        model: app.Group\n    });\n\n    app.Groups = new Groups();\n\n    app.GroupsTab = Backbone.View.extend({\n        el: '#app',\n        events: {\n\n        },\n        initialize: function() {\n            this.$list = $('#group_list tbody');\n\n            this.listenTo(app.Groups, 'add', this.addOne);\n            this.listenTo(app.Groups, 'reset', this.addAll);\n            this.listenTo(app.Groups, 'remove', this.addAll);\n            this.listenTo(app.Groups, 'all', this.render);\n\n            app.listener.on('group:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelChanged', function (data) {\n                $('#group_' + data.model.id).html(data.model.name);\n\n                var group = app.Groups.get(parseInt(data.model.id));\n\n                if (group) {\n                    group.set(data.model);\n                }\n            });\n\n            app.listener.on('group:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelCreated', function (data) {\n                app.Groups.add(data.model);\n            });\n\n            app.listener.on('group:REBELinBLUE\\\\Deployer\\\\Events\\\\ModelTrashed', function (data) {\n                var group = app.Groups.get(parseInt(data.model.id));\n\n                if (group) {\n                    app.Groups.remove(group);\n                }\n            });\n        },\n        addOne: function (group) {\n\n            var view = new app.GroupView({ \n                model: group\n            });\n\n            this.$list.append(view.render().el);\n        },\n        addAll: function () {\n            this.$list.html('');\n            app.Servers.each(this.addOne, this);\n        }\n    });\n\n    app.GroupView = Backbone.View.extend({\n        tagName:  'tr',\n        events: {\n            'click .btn-edit': 'editGroup'\n        },\n        initialize: function () {\n            this.listenTo(this.model, 'change', this.render);\n            this.listenTo(this.model, 'destroy', this.remove);\n\n            this.template = _.template($('#group-template').html());\n        },\n        render: function () {\n            var data = this.model.toJSON();\n\n            this.$el.html(this.template(data));\n\n            return this;\n        },\n        editGroup: function() {\n            $('#group_id').val(this.model.id);\n            $('#group_name').val(this.model.get('name'));\n        }\n    });\n})(jQuery);","var iframeCount = 0;\n\nfunction Uploader(options) {\n  if (!(this instanceof Uploader)) {\n    return new Uploader(options);\n  }\n  if (isString(options)) {\n    options = {trigger: options};\n  }\n\n  var settings = {\n    trigger: null,\n    name: null,\n    action: null,\n    data: null,\n    accept: null,\n    change: null,\n    error: null,\n    multiple: true,\n    success: null\n  };\n  if (options) {\n    $.extend(settings, options);\n  }\n  var $trigger = $(settings.trigger);\n\n  settings.action = settings.action || $trigger.data('action') || '/upload';\n  settings.name = settings.name || $trigger.attr('name') || $trigger.data('name') || 'file';\n  settings.data = settings.data || parse($trigger.data('data'));\n  settings.accept = settings.accept || $trigger.data('accept');\n  settings.success = settings.success || $trigger.data('success');\n  this.settings = settings;\n\n  this.setup();\n  this.bind();\n}\n\n// initialize\n// create input, form, iframe\nUploader.prototype.setup = function() {\n  this.form = $(\n    '<form method=\"post\" enctype=\"multipart/form-data\"'\n    + 'target=\"\" action=\"' + this.settings.action + '\" />'\n  );\n\n  this.iframe = newIframe();\n  this.form.attr('target', this.iframe.attr('name'));\n\n  var data = this.settings.data;\n  this.form.append(createInputs(data));\n  if (window.FormData) {\n    this.form.append(createInputs({'_uploader_': 'formdata'}));\n  } else {\n    this.form.append(createInputs({'_uploader_': 'iframe'}));\n  }\n\n  var input = document.createElement('input');\n  input.type = 'file';\n  input.name = this.settings.name;\n  if (this.settings.accept) {\n    input.accept = this.settings.accept;\n  }\n  if (this.settings.multiple) {\n    input.multiple = true;\n    input.setAttribute('multiple', 'multiple');\n  }\n  this.input = $(input);\n\n  var $trigger = $(this.settings.trigger);\n  this.input.attr('hidefocus', true).css({\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    opacity: 0,\n    outline: 0,\n    cursor: 'pointer',\n    height: $trigger.outerHeight(),\n    fontSize: Math.max(64, $trigger.outerHeight() * 5)\n  });\n  this.form.append(this.input);\n  this.form.css({\n    position: 'absolute',\n    top: $trigger.offset().top,\n    left: $trigger.offset().left,\n    overflow: 'hidden',\n    width: $trigger.outerWidth(),\n    height: $trigger.outerHeight(),\n    zIndex: findzIndex($trigger) + 10\n  }).appendTo('body');\n  return this;\n};\n\n// bind events\nUploader.prototype.bind = function() {\n  var self = this;\n  var $trigger = $(self.settings.trigger);\n  $trigger.mouseenter(function() {\n    self.form.css({\n      top: $trigger.offset().top,\n      left: $trigger.offset().left,\n      width: $trigger.outerWidth(),\n      height: $trigger.outerHeight()\n    });\n  });\n  self.bindInput();\n};\n\nUploader.prototype.bindInput = function() {\n  var self = this;\n  self.input.change(function(e) {\n    // ie9 don't support FileList Object\n    // http://stackoverflow.com/questions/12830058/ie8-input-type-file-get-files\n    self._files = this.files || [{\n      name: e.target.value\n    }];\n    var file = self.input.val();\n    if (self.settings.change) {\n      self.settings.change.call(self, self._files);\n    } else if (file) {\n      return self.submit();\n    }\n  });\n};\n\n// handle submit event\n// prepare for submiting form\nUploader.prototype.submit = function() {\n  var self = this;\n  if (window.FormData && self._files) {\n    // build a FormData\n    var form = new FormData(self.form.get(0));\n    // use FormData to upload\n    form.append(self.settings.name, self._files);\n\n    var optionXhr;\n    if (self.settings.progress) {\n      // fix the progress target file\n      var files = self._files;\n      optionXhr = function() {\n        var xhr = $.ajaxSettings.xhr();\n        if (xhr.upload) {\n          xhr.upload.addEventListener('progress', function(event) {\n            var percent = 0;\n            var position = event.loaded || event.position; /*event.position is deprecated*/\n            var total = event.total;\n            if (event.lengthComputable) {\n                percent = Math.ceil(position / total * 100);\n            }\n            self.settings.progress(event, position, total, percent, files);\n          }, false);\n        }\n        return xhr;\n      };\n    }\n    $.ajax({\n      url: self.settings.action,\n      type: 'post',\n      processData: false,\n      contentType: false,\n      data: form,\n      xhr: optionXhr,\n      context: this,\n      success: self.settings.success,\n      error: self.settings.error\n    });\n    return this;\n  } else {\n    // iframe upload\n    self.iframe = newIframe();\n    self.form.attr('target', self.iframe.attr('name'));\n    $('body').append(self.iframe);\n    self.iframe.one('load', function() {\n      // https://github.com/blueimp/jQuery-File-Upload/blob/9.5.6/js/jquery.iframe-transport.js#L102\n      // Fix for IE endless progress bar activity bug\n      // (happens on form submits to iframe targets):\n      $('<iframe src=\"javascript:false;\"></iframe>')\n        .appendTo(self.form)\n        .remove();\n      var response;\n      try {\n        response = $(this).contents().find(\"body\").html();\n      } catch (e) {\n        response = \"cross-domain\";\n      }\n      $(this).remove();\n      if (!response) {\n        if (self.settings.error) {\n          self.settings.error(self.input.val());\n        }\n      } else {\n        if (self.settings.success) {\n          self.settings.success(response);\n        }\n      }\n    });\n    self.form.submit();\n  }\n  return this;\n};\n\nUploader.prototype.refreshInput = function() {\n  //replace the input element, or the same file can not to be uploaded\n  var newInput = this.input.clone();\n  this.input.before(newInput);\n  this.input.off('change');\n  this.input.remove();\n  this.input = newInput;\n  this.bindInput();\n};\n\n// handle change event\n// when value in file input changed\nUploader.prototype.change = function(callback) {\n  if (!callback) {\n    return this;\n  }\n  this.settings.change = callback;\n  return this;\n};\n\n// handle when upload success\nUploader.prototype.success = function(callback) {\n  var me = this;\n  this.settings.success = function(response) {\n    me.refreshInput();\n    if (callback) {\n      callback(response);\n    }\n  };\n\n  return this;\n};\n\n// handle when upload success\nUploader.prototype.error = function(callback) {\n  var me = this;\n  this.settings.error = function(response) {\n    if (callback) {\n      me.refreshInput();\n      callback(response);\n    }\n  };\n  return this;\n};\n\n// enable\nUploader.prototype.enable = function(){\n  this.input.prop('disabled', false);\n  this.input.css('cursor', 'pointer');\n};\n\n// disable\nUploader.prototype.disable = function(){\n  this.input.prop('disabled', true);\n  this.input.css('cursor', 'not-allowed');\n};\n\n// Helpers\n// -------------\n\nfunction isString(val) {\n  return Object.prototype.toString.call(val) === '[object String]';\n}\n\nfunction createInputs(data) {\n  if (!data) return [];\n\n  var inputs = [], i;\n  for (var name in data) {\n    i = document.createElement('input');\n    i.type = 'hidden';\n    i.name = name;\n    i.value = data[name];\n    inputs.push(i);\n  }\n  return inputs;\n}\n\nfunction parse(str) {\n  if (!str) return {};\n  var ret = {};\n\n  var pairs = str.split('&');\n  var unescape = function(s) {\n    return decodeURIComponent(s.replace(/\\+/g, ' '));\n  };\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i].split('=');\n    var key = unescape(pair[0]);\n    var val = unescape(pair[1]);\n    ret[key] = val;\n  }\n\n  return ret;\n}\n\nfunction findzIndex($node) {\n  var parents = $node.parentsUntil('body');\n  var zIndex = 0;\n  for (var i = 0; i < parents.length; i++) {\n    var item = parents.eq(i);\n    if (item.css('position') !== 'static') {\n      zIndex = parseInt(item.css('zIndex'), 10) || zIndex;\n    }\n  }\n  return zIndex;\n}\n\nfunction newIframe() {\n  var iframeName = 'iframe-uploader-' + iframeCount;\n  var iframe = $('<iframe name=\"' + iframeName + '\" />').hide();\n  iframeCount += 1;\n  return iframe;\n}\n\nfunction MultipleUploader(options) {\n  if (!(this instanceof MultipleUploader)) {\n    return new MultipleUploader(options);\n  }\n\n  if (isString(options)) {\n    options = {trigger: options};\n  }\n  var $trigger = $(options.trigger);\n\n  var uploaders = [];\n  $trigger.each(function(i, item) {\n    options.trigger = item;\n    uploaders.push(new Uploader(options));\n  });\n  this._uploaders = uploaders;\n}\nMultipleUploader.prototype.submit = function() {\n  $.each(this._uploaders, function(i, item) {\n    item.submit();\n  });\n  return this;\n};\nMultipleUploader.prototype.change = function(callback) {\n  $.each(this._uploaders, function(i, item) {\n    item.change(callback);\n  });\n  return this;\n};\nMultipleUploader.prototype.success = function(callback) {\n  $.each(this._uploaders, function(i, item) {\n    item.success(callback);\n  });\n  return this;\n};\nMultipleUploader.prototype.error = function(callback) {\n  $.each(this._uploaders, function(i, item) {\n    item.error(callback);\n  });\n  return this;\n};\nMultipleUploader.prototype.enable = function (){\n  $.each(this._uploaders, function (i, item){\n    item.enable();\n  });\n  return this;\n};\nMultipleUploader.prototype.disable = function (){\n  $.each(this._uploaders, function (i, item){\n    item.disable();\n  });\n  return this;\n};\nMultipleUploader.Uploader = Uploader;","var app = app || {};\n\n(function ($) {\n    // Stop the uploader causing errors on pages it shouldn't be used\n    if ($('#upload').length === 0) {\n        return;\n    }\n\n    $('#skin').on('change', function() {\n        $('body').removeClass();\n        $(\"body\").addClass('skin-' + $(this).find(':selected').val());\n    });\n\n    $('#two-factor-auth').on('change', function () {\n\n        var container = $('.auth-code');\n\n        if ($(this).is(':checked')) {\n            container.removeClass('hide');\n        } else {\n            container.addClass('hide');\n        }\n    });\n\n    $('#request-change-email').on('click', function() {\n        var box = $(this).parents('.box');\n        box.children('.overlay').removeClass('hide');\n        $.post('/profile/email', function(res) {\n            if (res == 'success') {\n                box.children('.overlay').addClass('hide');\n                box.find('.help-block').removeClass('hide');\n            }\n        });\n    });\n\n    var cropperData = {};\n    $('.avatar>img').cropper({\n        aspectRatio: 1 / 1,\n        preview: '.avatar-preview',\n        crop: function(data) {\n            cropperData.dataX = Math.round(data.x);\n            cropperData.dataY = Math.round(data.y);\n            cropperData.dataHeight = Math.round(data.height);\n            cropperData.dataWidth = Math.round(data.width);\n            cropperData.dataRotate = Math.round(data.rotate);\n        },\n        built: function() {\n            $('#upload-overlay').addClass('hide');\n        }\n    });\n\n    var uploader = new Uploader({\n        trigger: '#upload',\n        name: 'file',\n        action: '/profile/upload',\n        accept: 'image/*',\n        data: {\n            '_token': $('meta[name=\"token\"]').attr('content')\n        },\n        multiple: false,\n        change: function(){\n            $('#upload-overlay').removeClass('hide');\n            this.submit();\n        },\n        error: function(file) {\n            if (file.responseJSON.file) {\n                alert(file.responseJSON.file.join(''));\n            } else if (file.responseJSON.error) {\n                alert(file.responseJSON.error.message);\n            }\n\n            $('#upload-overlay').addClass('hide');\n        },\n        success: function(response) {\n            if( response.message === 'success') {\n                $('.avatar>img').cropper('replace', response.image);\n                cropperData.path = response.path;\n\n                $('.current-avatar-preview').addClass('hide');\n                $('.avatar-preview').removeClass('hide');\n                $('#save-avatar').removeClass('hide');\n            }\n        }\n    });\n\n    $('#save-avatar').on('click', function(){\n        $('#upload-overlay').removeClass('hide');\n        $('.avatar-message .alert').addClass('hide');\n        $.post('/profile/avatar', cropperData).success(function(resp) {\n            $('#upload-overlay').addClass('hide');\n            if (resp.image) {\n                $('.avatar-message .alert.alert-success').removeClass('hide');\n                $('#use-gravatar').removeClass('hide');\n            } else {\n                $('.avatar-message .alert.alert-danger').removeClass('hide');\n            }\n        });\n    });\n\n    $('#use-gravatar').on('click', function () {\n\n        $('#upload-overlay').removeClass('hide');\n        $('.avatar-message .alert').addClass('hide');\n\n        $.post('/profile/gravatar').success(function(resp) {\n\n            $('#upload-overlay').addClass('hide');\n\n            // if (resp.image) {\n                $('.avatar-message .alert.alert-success').removeClass('hide');\n                $('.avatar-preview').addClass('hide');\n                $('.current-avatar-preview').removeClass('hide');\n                $('.current-avatar-preview').attr('src', resp.image);\n                $('#use-gravatar').addClass('hide');\n                $('#avatar-save-buttons button').addClass('hide');\n            // } else {\n            //     $('.avatar-preview').addClass('hide');\n            //     $('#use-gravatar').removeClass('hide');\n            // }\n        });\n    });\n})(jQuery);\n","/*! AdminLTE app.js\n * ================\n * Main JS application file for AdminLTE v2. This file\n * should be included in all pages. It controls some layout\n * options and implements exclusive AdminLTE plugins.\n *\n * @Author  Almsaeed Studio\n * @Support <http://www.almsaeedstudio.com>\n * @Email   <support@almsaeedstudio.com>\n * @version 2.3.0\n * @license MIT <http://opensource.org/licenses/MIT>\n */\n\n//Make sure jQuery has been loaded before app.js\nif (typeof jQuery === \"undefined\") {\n  throw new Error(\"AdminLTE requires jQuery\");\n}\n\n/* AdminLTE\n *\n * @type Object\n * @description $.AdminLTE is the main object for the template's app.\n *              It's used for implementing functions and options related\n *              to the template. Keeping everything wrapped in an object\n *              prevents conflict with other plugins and is a better\n *              way to organize our code.\n */\n$.AdminLTE = {};\n\n/* --------------------\n * - AdminLTE Options -\n * --------------------\n * Modify these options to suit your implementation\n */\n$.AdminLTE.options = {\n  //Add slimscroll to navbar menus\n  //This requires you to load the slimscroll plugin\n  //in every page before app.js\n  navbarMenuSlimscroll: true,\n  navbarMenuSlimscrollWidth: \"3px\", //The width of the scroll bar\n  navbarMenuHeight: \"200px\", //The height of the inner menu\n  //General animation speed for JS animated elements such as box collapse/expand and\n  //sidebar treeview slide up/down. This options accepts an integer as milliseconds,\n  //'fast', 'normal', or 'slow'\n  animationSpeed: 500,\n  //Sidebar push menu toggle button selector\n  sidebarToggleSelector: \"[data-toggle='offcanvas']\",\n  //Activate sidebar push menu\n  sidebarPushMenu: true,\n  //Activate sidebar slimscroll if the fixed layout is set (requires SlimScroll Plugin)\n  sidebarSlimScroll: true,\n  //Enable sidebar expand on hover effect for sidebar mini\n  //This option is forced to true if both the fixed layout and sidebar mini\n  //are used together\n  sidebarExpandOnHover: false,\n  //BoxRefresh Plugin\n  enableBoxRefresh: true,\n  //Bootstrap.js tooltip\n  enableBSToppltip: true,\n  BSTooltipSelector: \"[data-toggle='tooltip']\",\n  //Enable Fast Click. Fastclick.js creates a more\n  //native touch experience with touch devices. If you\n  //choose to enable the plugin, make sure you load the script\n  //before AdminLTE's app.js\n  enableFastclick: true,\n  //Control Sidebar Options\n  enableControlSidebar: true,\n  controlSidebarOptions: {\n    //Which button should trigger the open/close event\n    toggleBtnSelector: \"[data-toggle='control-sidebar']\",\n    //The sidebar selector\n    selector: \".control-sidebar\",\n    //Enable slide over content\n    slide: true\n  },\n  //Box Widget Plugin. Enable this plugin\n  //to allow boxes to be collapsed and/or removed\n  enableBoxWidget: true,\n  //Box Widget plugin options\n  boxWidgetOptions: {\n    boxWidgetIcons: {\n      //Collapse icon\n      collapse: 'fa-minus',\n      //Open icon\n      open: 'fa-plus',\n      //Remove icon\n      remove: 'fa-times'\n    },\n    boxWidgetSelectors: {\n      //Remove button selector\n      remove: '[data-widget=\"remove\"]',\n      //Collapse button selector\n      collapse: '[data-widget=\"collapse\"]'\n    }\n  },\n  //Direct Chat plugin options\n  directChat: {\n    //Enable direct chat by default\n    enable: true,\n    //The button to open and close the chat contacts pane\n    contactToggleSelector: '[data-widget=\"chat-pane-toggle\"]'\n  },\n  //Define the set of colors to use globally around the website\n  colors: {\n    lightBlue: \"#3c8dbc\",\n    red: \"#f56954\",\n    green: \"#00a65a\",\n    aqua: \"#00c0ef\",\n    yellow: \"#f39c12\",\n    blue: \"#0073b7\",\n    navy: \"#001F3F\",\n    teal: \"#39CCCC\",\n    olive: \"#3D9970\",\n    lime: \"#01FF70\",\n    orange: \"#FF851B\",\n    fuchsia: \"#F012BE\",\n    purple: \"#8E24AA\",\n    maroon: \"#D81B60\",\n    black: \"#222222\",\n    gray: \"#d2d6de\"\n  },\n  //The standard screen sizes that bootstrap uses.\n  //If you change these in the variables.less file, change\n  //them here too.\n  screenSizes: {\n    xs: 480,\n    sm: 768,\n    md: 992,\n    lg: 1200\n  }\n};\n\n/* ------------------\n * - Implementation -\n * ------------------\n * The next block of code implements AdminLTE's\n * functions and plugins as specified by the\n * options above.\n */\n$(function () {\n  \"use strict\";\n\n  //Fix for IE page transitions\n  $(\"body\").removeClass(\"hold-transition\");\n\n  //Extend options if external options exist\n  if (typeof AdminLTEOptions !== \"undefined\") {\n    $.extend(true,\n            $.AdminLTE.options,\n            AdminLTEOptions);\n  }\n\n  //Easy access to options\n  var o = $.AdminLTE.options;\n\n  //Set up the object\n  _init();\n\n  //Activate the layout maker\n  $.AdminLTE.layout.activate();\n\n  //Enable sidebar tree view controls\n  $.AdminLTE.tree('.sidebar');\n\n  //Enable control sidebar\n  if (o.enableControlSidebar) {\n    $.AdminLTE.controlSidebar.activate();\n  }\n\n  //Add slimscroll to navbar dropdown\n  if (o.navbarMenuSlimscroll && typeof $.fn.slimscroll != 'undefined') {\n    $(\".navbar .menu\").slimscroll({\n      height: o.navbarMenuHeight,\n      alwaysVisible: false,\n      size: o.navbarMenuSlimscrollWidth\n    }).css(\"width\", \"100%\");\n  }\n\n  //Activate sidebar push menu\n  if (o.sidebarPushMenu) {\n    $.AdminLTE.pushMenu.activate(o.sidebarToggleSelector);\n  }\n\n  //Activate Bootstrap tooltip\n  if (o.enableBSToppltip) {\n    $('body').tooltip({\n      selector: o.BSTooltipSelector\n    });\n  }\n\n  //Activate box widget\n  if (o.enableBoxWidget) {\n    $.AdminLTE.boxWidget.activate();\n  }\n\n  //Activate fast click\n  if (o.enableFastclick && typeof FastClick != 'undefined') {\n    FastClick.attach(document.body);\n  }\n\n  //Activate direct chat widget\n  if (o.directChat.enable) {\n    $(document).on('click', o.directChat.contactToggleSelector, function () {\n      var box = $(this).parents('.direct-chat').first();\n      box.toggleClass('direct-chat-contacts-open');\n    });\n  }\n\n  /*\n   * INITIALIZE BUTTON TOGGLE\n   * ------------------------\n   */\n  $('.btn-group[data-toggle=\"btn-toggle\"]').each(function () {\n    var group = $(this);\n    $(this).find(\".btn\").on('click', function (e) {\n      group.find(\".btn.active\").removeClass(\"active\");\n      $(this).addClass(\"active\");\n      e.preventDefault();\n    });\n\n  });\n});\n\n/* ----------------------------------\n * - Initialize the AdminLTE Object -\n * ----------------------------------\n * All AdminLTE functions are implemented below.\n */\nfunction _init() {\n  'use strict';\n  /* Layout\n   * ======\n   * Fixes the layout height in case min-height fails.\n   *\n   * @type Object\n   * @usage $.AdminLTE.layout.activate()\n   *        $.AdminLTE.layout.fix()\n   *        $.AdminLTE.layout.fixSidebar()\n   */\n  $.AdminLTE.layout = {\n    activate: function () {\n      var _this = this;\n      _this.fix();\n      _this.fixSidebar();\n      $(window, \".wrapper\").resize(function () {\n        _this.fix();\n        _this.fixSidebar();\n      });\n    },\n    fix: function () {\n      //Get window height and the wrapper height\n      var neg = $('.main-header').outerHeight() + $('.main-footer').outerHeight();\n      var window_height = $(window).height();\n      var sidebar_height = $(\".sidebar\").height();\n      //Set the min-height of the content and sidebar based on the\n      //the height of the document.\n      if ($(\"body\").hasClass(\"fixed\")) {\n        $(\".content-wrapper, .right-side\").css('min-height', window_height - $('.main-footer').outerHeight());\n      } else {\n        var postSetWidth;\n        if (window_height >= sidebar_height) {\n          $(\".content-wrapper, .right-side\").css('min-height', window_height - neg);\n          postSetWidth = window_height - neg;\n        } else {\n          $(\".content-wrapper, .right-side\").css('min-height', sidebar_height);\n          postSetWidth = sidebar_height;\n        }\n\n        //Fix for the control sidebar height\n        var controlSidebar = $($.AdminLTE.options.controlSidebarOptions.selector);\n        if (typeof controlSidebar !== \"undefined\") {\n          if (controlSidebar.height() > postSetWidth)\n            $(\".content-wrapper, .right-side\").css('min-height', controlSidebar.height());\n        }\n\n      }\n    },\n    fixSidebar: function () {\n      //Make sure the body tag has the .fixed class\n      if (!$(\"body\").hasClass(\"fixed\")) {\n        if (typeof $.fn.slimScroll != 'undefined') {\n          $(\".sidebar\").slimScroll({destroy: true}).height(\"auto\");\n        }\n        return;\n      } else if (typeof $.fn.slimScroll == 'undefined' && window.console) {\n        window.console.error(\"Error: the fixed layout requires the slimscroll plugin!\");\n      }\n      //Enable slimscroll for fixed layout\n      if ($.AdminLTE.options.sidebarSlimScroll) {\n        if (typeof $.fn.slimScroll != 'undefined') {\n          //Destroy if it exists\n          $(\".sidebar\").slimScroll({destroy: true}).height(\"auto\");\n          //Add slimscroll\n          $(\".sidebar\").slimscroll({\n            height: ($(window).height() - $(\".main-header\").height()) + \"px\",\n            color: \"rgba(0,0,0,0.2)\",\n            size: \"3px\"\n          });\n        }\n      }\n    }\n  };\n\n  /* PushMenu()\n   * ==========\n   * Adds the push menu functionality to the sidebar.\n   *\n   * @type Function\n   * @usage: $.AdminLTE.pushMenu(\"[data-toggle='offcanvas']\")\n   */\n  $.AdminLTE.pushMenu = {\n    activate: function (toggleBtn) {\n      //Get the screen sizes\n      var screenSizes = $.AdminLTE.options.screenSizes;\n\n      //Enable sidebar toggle\n      $(toggleBtn).on('click', function (e) {\n        e.preventDefault();\n\n        //Enable sidebar push menu\n        if ($(window).width() > (screenSizes.sm - 1)) {\n          if ($(\"body\").hasClass('sidebar-collapse')) {\n            $(\"body\").removeClass('sidebar-collapse').trigger('expanded.pushMenu');\n          } else {\n            $(\"body\").addClass('sidebar-collapse').trigger('collapsed.pushMenu');\n          }\n        }\n        //Handle sidebar push menu for small screens\n        else {\n          if ($(\"body\").hasClass('sidebar-open')) {\n            $(\"body\").removeClass('sidebar-open').removeClass('sidebar-collapse').trigger('collapsed.pushMenu');\n          } else {\n            $(\"body\").addClass('sidebar-open').trigger('expanded.pushMenu');\n          }\n        }\n      });\n\n      $(\".content-wrapper\").click(function () {\n        //Enable hide menu when clicking on the content-wrapper on small screens\n        if ($(window).width() <= (screenSizes.sm - 1) && $(\"body\").hasClass(\"sidebar-open\")) {\n          $(\"body\").removeClass('sidebar-open');\n        }\n      });\n\n      //Enable expand on hover for sidebar mini\n      if ($.AdminLTE.options.sidebarExpandOnHover\n              || ($('body').hasClass('fixed')\n                      && $('body').hasClass('sidebar-mini'))) {\n        this.expandOnHover();\n      }\n    },\n    expandOnHover: function () {\n      var _this = this;\n      var screenWidth = $.AdminLTE.options.screenSizes.sm - 1;\n      //Expand sidebar on hover\n      $('.main-sidebar').hover(function () {\n        if ($('body').hasClass('sidebar-mini')\n                && $(\"body\").hasClass('sidebar-collapse')\n                && $(window).width() > screenWidth) {\n          _this.expand();\n        }\n      }, function () {\n        if ($('body').hasClass('sidebar-mini')\n                && $('body').hasClass('sidebar-expanded-on-hover')\n                && $(window).width() > screenWidth) {\n          _this.collapse();\n        }\n      });\n    },\n    expand: function () {\n      $(\"body\").removeClass('sidebar-collapse').addClass('sidebar-expanded-on-hover');\n    },\n    collapse: function () {\n      if ($('body').hasClass('sidebar-expanded-on-hover')) {\n        $('body').removeClass('sidebar-expanded-on-hover').addClass('sidebar-collapse');\n      }\n    }\n  };\n\n  /* Tree()\n   * ======\n   * Converts the sidebar into a multilevel\n   * tree view menu.\n   *\n   * @type Function\n   * @Usage: $.AdminLTE.tree('.sidebar')\n   */\n  $.AdminLTE.tree = function (menu) {\n    var _this = this;\n    var animationSpeed = $.AdminLTE.options.animationSpeed;\n    $(document).on('click', menu + ' li a', function (e) {\n      //Get the clicked link and the next element\n      var $this = $(this);\n      var checkElement = $this.next();\n\n      //Check if the next element is a menu and is visible\n      if ((checkElement.is('.treeview-menu')) && (checkElement.is(':visible'))) {\n        //Close the menu\n        checkElement.slideUp(animationSpeed, function () {\n          checkElement.removeClass('menu-open');\n          //Fix the layout in case the sidebar stretches over the height of the window\n          //_this.layout.fix();\n        });\n        checkElement.parent(\"li\").removeClass(\"active\");\n      }\n      //If the menu is not visible\n      else if ((checkElement.is('.treeview-menu')) && (!checkElement.is(':visible'))) {\n        //Get the parent menu\n        var parent = $this.parents('ul').first();\n        //Close all open menus within the parent\n        var ul = parent.find('ul:visible').slideUp(animationSpeed);\n        //Remove the menu-open class from the parent\n        ul.removeClass('menu-open');\n        //Get the parent li\n        var parent_li = $this.parent(\"li\");\n\n        //Open the target menu and add the menu-open class\n        checkElement.slideDown(animationSpeed, function () {\n          //Add the class active to the parent li\n          checkElement.addClass('menu-open');\n          parent.find('li.active').removeClass('active');\n          parent_li.addClass('active');\n          //Fix the layout in case the sidebar stretches over the height of the window\n          _this.layout.fix();\n        });\n      }\n      //if this isn't a link, prevent the page from being redirected\n      if (checkElement.is('.treeview-menu')) {\n        e.preventDefault();\n      }\n    });\n  };\n\n  /* ControlSidebar\n   * ==============\n   * Adds functionality to the right sidebar\n   *\n   * @type Object\n   * @usage $.AdminLTE.controlSidebar.activate(options)\n   */\n  $.AdminLTE.controlSidebar = {\n    //instantiate the object\n    activate: function () {\n      //Get the object\n      var _this = this;\n      //Update options\n      var o = $.AdminLTE.options.controlSidebarOptions;\n      //Get the sidebar\n      var sidebar = $(o.selector);\n      //The toggle button\n      var btn = $(o.toggleBtnSelector);\n\n      //Listen to the click event\n      btn.on('click', function (e) {\n        e.preventDefault();\n        //If the sidebar is not open\n        if (!sidebar.hasClass('control-sidebar-open')\n                && !$('body').hasClass('control-sidebar-open')) {\n          //Open the sidebar\n          _this.open(sidebar, o.slide);\n        } else {\n          _this.close(sidebar, o.slide);\n        }\n      });\n\n      //If the body has a boxed layout, fix the sidebar bg position\n      var bg = $(\".control-sidebar-bg\");\n      _this._fix(bg);\n\n      //If the body has a fixed layout, make the control sidebar fixed\n      if ($('body').hasClass('fixed')) {\n        _this._fixForFixed(sidebar);\n      } else {\n        //If the content height is less than the sidebar's height, force max height\n        if ($('.content-wrapper, .right-side').height() < sidebar.height()) {\n          _this._fixForContent(sidebar);\n        }\n      }\n    },\n    //Open the control sidebar\n    open: function (sidebar, slide) {\n      //Slide over content\n      if (slide) {\n        sidebar.addClass('control-sidebar-open');\n      } else {\n        //Push the content by adding the open class to the body instead\n        //of the sidebar itself\n        $('body').addClass('control-sidebar-open');\n      }\n    },\n    //Close the control sidebar\n    close: function (sidebar, slide) {\n      if (slide) {\n        sidebar.removeClass('control-sidebar-open');\n      } else {\n        $('body').removeClass('control-sidebar-open');\n      }\n    },\n    _fix: function (sidebar) {\n      var _this = this;\n      if ($(\"body\").hasClass('layout-boxed')) {\n        sidebar.css('position', 'absolute');\n        sidebar.height($(\".wrapper\").height());\n        $(window).resize(function () {\n          _this._fix(sidebar);\n        });\n      } else {\n        sidebar.css({\n          'position': 'fixed',\n          'height': 'auto'\n        });\n      }\n    },\n    _fixForFixed: function (sidebar) {\n      sidebar.css({\n        'position': 'fixed',\n        'max-height': '100%',\n        'overflow': 'auto',\n        'padding-bottom': '50px'\n      });\n    },\n    _fixForContent: function (sidebar) {\n      $(\".content-wrapper, .right-side\").css('min-height', sidebar.height());\n    }\n  };\n\n  /* BoxWidget\n   * =========\n   * BoxWidget is a plugin to handle collapsing and\n   * removing boxes from the screen.\n   *\n   * @type Object\n   * @usage $.AdminLTE.boxWidget.activate()\n   *        Set all your options in the main $.AdminLTE.options object\n   */\n  $.AdminLTE.boxWidget = {\n    selectors: $.AdminLTE.options.boxWidgetOptions.boxWidgetSelectors,\n    icons: $.AdminLTE.options.boxWidgetOptions.boxWidgetIcons,\n    animationSpeed: $.AdminLTE.options.animationSpeed,\n    activate: function (_box) {\n      var _this = this;\n      if (!_box) {\n        _box = document; // activate all boxes per default\n      }\n      //Listen for collapse event triggers\n      $(_box).on('click', _this.selectors.collapse, function (e) {\n        e.preventDefault();\n        _this.collapse($(this));\n      });\n\n      //Listen for remove event triggers\n      $(_box).on('click', _this.selectors.remove, function (e) {\n        e.preventDefault();\n        _this.remove($(this));\n      });\n    },\n    collapse: function (element) {\n      var _this = this;\n      //Find the box parent\n      var box = element.parents(\".box\").first();\n      //Find the body and the footer\n      var box_content = box.find(\"> .box-body, > .box-footer, > form  >.box-body, > form > .box-footer\");\n      if (!box.hasClass(\"collapsed-box\")) {\n        //Convert minus into plus\n        element.children(\":first\")\n                .removeClass(_this.icons.collapse)\n                .addClass(_this.icons.open);\n        //Hide the content\n        box_content.slideUp(_this.animationSpeed, function () {\n          box.addClass(\"collapsed-box\");\n        });\n      } else {\n        //Convert plus into minus\n        element.children(\":first\")\n                .removeClass(_this.icons.open)\n                .addClass(_this.icons.collapse);\n        //Show the content\n        box_content.slideDown(_this.animationSpeed, function () {\n          box.removeClass(\"collapsed-box\");\n        });\n      }\n    },\n    remove: function (element) {\n      //Find the box parent\n      var box = element.parents(\".box\").first();\n      box.slideUp(this.animationSpeed);\n    }\n  };\n}\n\n/* ------------------\n * - Custom Plugins -\n * ------------------\n * All custom plugins are defined below.\n */\n\n/*\n * BOX REFRESH BUTTON\n * ------------------\n * This is a custom plugin to use with the component BOX. It allows you to add\n * a refresh button to the box. It converts the box's state to a loading state.\n *\n * @type plugin\n * @usage $(\"#box-widget\").boxRefresh( options );\n */\n(function ($) {\n\n  \"use strict\";\n\n  $.fn.boxRefresh = function (options) {\n\n    // Render options\n    var settings = $.extend({\n      //Refresh button selector\n      trigger: \".refresh-btn\",\n      //File source to be loaded (e.g: ajax/src.php)\n      source: \"\",\n      //Callbacks\n      onLoadStart: function (box) {\n        return box;\n      }, //Right after the button has been clicked\n      onLoadDone: function (box) {\n        return box;\n      } //When the source has been loaded\n\n    }, options);\n\n    //The overlay\n    var overlay = $('<div class=\"overlay\"><div class=\"fa fa-refresh fa-spin\"></div></div>');\n\n    return this.each(function () {\n      //if a source is specified\n      if (settings.source === \"\") {\n        if (window.console) {\n          window.console.log(\"Please specify a source first - boxRefresh()\");\n        }\n        return;\n      }\n      //the box\n      var box = $(this);\n      //the button\n      var rBtn = box.find(settings.trigger).first();\n\n      //On trigger click\n      rBtn.on('click', function (e) {\n        e.preventDefault();\n        //Add loading overlay\n        start(box);\n\n        //Perform ajax call\n        box.find(\".box-body\").load(settings.source, function () {\n          done(box);\n        });\n      });\n    });\n\n    function start(box) {\n      //Add overlay and loading img\n      box.append(overlay);\n\n      settings.onLoadStart.call(box);\n    }\n\n    function done(box) {\n      //Remove overlay and loading img\n      box.find(overlay).remove();\n\n      settings.onLoadDone.call(box);\n    }\n\n  };\n\n})(jQuery);\n\n/*\n * EXPLICIT BOX ACTIVATION\n * -----------------------\n * This is a custom plugin to use with the component BOX. It allows you to activate\n * a box inserted in the DOM after the app.js was loaded.\n *\n * @type plugin\n * @usage $(\"#box-widget\").activateBox();\n */\n(function ($) {\n\n  'use strict';\n\n  $.fn.activateBox = function () {\n    $.AdminLTE.boxWidget.activate(this);\n  };\n\n})(jQuery);\n\n/*\n * TODO LIST CUSTOM PLUGIN\n * -----------------------\n * This plugin depends on iCheck plugin for checkbox and radio inputs\n *\n * @type plugin\n * @usage $(\"#todo-widget\").todolist( options );\n */\n(function ($) {\n\n  'use strict';\n\n  $.fn.todolist = function (options) {\n    // Render options\n    var settings = $.extend({\n      //When the user checks the input\n      onCheck: function (ele) {\n        return ele;\n      },\n      //When the user unchecks the input\n      onUncheck: function (ele) {\n        return ele;\n      }\n    }, options);\n\n    return this.each(function () {\n\n      if (typeof $.fn.iCheck != 'undefined') {\n        $('input', this).on('ifChecked', function () {\n          var ele = $(this).parents(\"li\").first();\n          ele.toggleClass(\"done\");\n          settings.onCheck.call(ele);\n        });\n\n        $('input', this).on('ifUnchecked', function () {\n          var ele = $(this).parents(\"li\").first();\n          ele.toggleClass(\"done\");\n          settings.onUncheck.call(ele);\n        });\n      } else {\n        $('input', this).on('change', function () {\n          var ele = $(this).parents(\"li\").first();\n          ele.toggleClass(\"done\");\n          if ($('input', ele).is(\":checked\")) {\n            settings.onCheck.call(ele);\n          } else {\n            settings.onUncheck.call(ele);\n          }\n        });\n      }\n    });\n  };\n}(jQuery));"],"sourceRoot":"/source/"}