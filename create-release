#!/usr/bin/env bash

NEW_VERSION=`sed 's/-dev//' VERSION`

while [[ "$CHANGELOG_GITHUB_TOKEN" =~ ^$  ]]
do
    read -p 'Github token not set: ' GITHUB_TOKEN
    export CHANGELOG_GITHUB_TOKEN=$GITHUB_TOKEN
done

CURRENT_VERSION=`curl --silent https://api.github.com/repos/REBELinBLUE/deployer/releases/latest | php -r 'echo json_decode(file_get_contents("php://stdin"))->tag_name;'`
# FIXME: Should text to ensure this worked!

git checkout master

github_changelog_generator --future-release $NEW_VERSION

while [[ "$NEXT_VERSION" =~ ^$  ]]
do
    read -p 'Enter the next version: ' NEXT_VERSION
done

echo -n $NEXT_VERSION > VERSION
echo '-dev' >> VERSION

sed -i "s/checkout $CURRENT_VERSION/checkout $NEW_VERSION/g" README.md

git add CHANGELOG.md VERSION README.md
git commit -m 'Updated CHANGELOG'
git push

#git stash
git pull

git checkout release
git merge --no-edit -q -X theirs master

# set version
echo $NEW_VERSION > VERSION

git add VERSION

git rm -rf public/build/*
rm -rf public/build/
npm install
composer install
gulp --production

git add -f public/build/rev-manifest.json
git add -f public/build/css/*.css
git add -f public/build/js/*.js
git add -f public/build/fonts/*

# Should we maybe remove things we don't need in a release like the raw CSS/JS from resources and the various files from .gitattributes?

git commit -am 'Building new release'
git push

git checkout master
git branch -D release

gulp

# TODO: Only pop if we made a new stash
#git stash pop
